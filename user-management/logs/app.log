2025-02-25 14:58:25 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"John Doe","customerEmailId":"johndoe@example.com","contactNumber":"9876543210","password":"SecurePass123","gender":"Male","dateOfBirth":"1995-06-15","address":{"addressName":"Home","addressLine1":"123 Main Street","addressLine2":"Apt 4B","area":"Downtown","city":"New York","state":"NY","pincode":"10001"}}
2025-02-25 14:58:25 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully"}
2025-02-25 14:59:28 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"johndoe@example.com","password":"SecurePass123"}
2025-02-25 14:59:28 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3YmQ4ZDM5MDg0M2YwNmE2NDkzNTljNiIsImlhdCI6MTc0MDQ3NTc2OCwiZXhwIjoxNzQwNDc5MzY4fQ.G1RqQQ17Cj0EFNqdSAs4w_2XI25tLmpZorLxs9oe4fc"}
2025-02-25 15:00:09 [INFO]: Request: POST /customer-api/customer/update-profile - Body: {"customerName":"John Doe Updated","contactNumber":"9876543210","gender":"Male","dateOfBirth":"1995-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-02-25 15:00:20 [INFO]: Request: POST /customer-api/customer/update - Body: {"customerName":"John Doe Updated","contactNumber":"9876543210","gender":"Male","dateOfBirth":"1995-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-02-25 15:00:23 [INFO]: Request: POST /customer-api/customer/update - Body: {"customerName":"John Doe Updated","contactNumber":"9876543210","gender":"Male","dateOfBirth":"1995-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-02-25 15:00:25 [INFO]: Request: POST /customer-api/customer/updatea - Body: {"customerName":"John Doe Updated","contactNumber":"9876543210","gender":"Male","dateOfBirth":"1995-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-02-25 15:00:33 [INFO]: Request: PUT /customer-api/customer/update - Body: {"customerName":"John Doe Updated","contactNumber":"9876543210","gender":"Male","dateOfBirth":"1995-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-02-25 15:01:51 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"John Doe","customerEmailId":"johndoe@example.com","contactNumber":"9876543210","password":"SecurePass123","gender":"Male","dateOfBirth":"1995-06-15","address":{"addressName":"Home","addressLine1":"123 Main Street","addressLine2":"Apt 4B","area":"Downtown","city":"New York","state":"NY","pincode":"10001"}}
2025-02-25 15:01:51 [INFO]: Response: POST /customer-api/customer/register - Status: 400 - Data: {"message":"User already exists"}
2025-02-25 15:01:54 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"johndoe@example.com","password":"SecurePass123"}
2025-02-25 15:01:54 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3YmQ4ZDM5MDg0M2YwNmE2NDkzNTljNiIsImlhdCI6MTc0MDQ3NTkxNCwiZXhwIjoxNzQwNDc5NTE0fQ.nHpNm4jV_wObnoJdiWjKhPQohBJYzdUqWyBbcZQrpN4"}
2025-02-25 17:07:40 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"John Doe","customerEmailId":"johndoe@example.com","contactNumber":"9876543210","password":"SecurePass123","gender":"Male","dateOfBirth":"1995-06-15","address":{"addressName":"Home","addressLine1":"123 Main Street","addressLine2":"Apt 4B","area":"Downtown","city":"New York","state":"NY","pincode":"10001"}}
2025-02-25 17:07:41 [INFO]: Response: POST /customer-api/customer/register - Status: 500 - Data: {"message":"Server Error"}
2025-02-25 17:07:43 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"John Doe","customerEmailId":"johndoe@example.com","contactNumber":"9876543210","password":"SecurePass123","gender":"Male","dateOfBirth":"1995-06-15","address":{"addressName":"Home","addressLine1":"123 Main Street","addressLine2":"Apt 4B","area":"Downtown","city":"New York","state":"NY","pincode":"10001"}}
2025-02-25 17:07:43 [INFO]: Response: POST /customer-api/customer/register - Status: 500 - Data: {"message":"Server Error"}
2025-02-25 17:11:29 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"John Doe","customerEmailId":"johndoe@example.com","contactNumber":"9876543210","password":"SecurePass123","gender":"Male","dateOfBirth":"1995-06-15","address":{"addressName":"Home","addressLine1":"123 Main Street","addressLine2":"Apt 4B","area":"Downtown","city":"New York","state":"NY","pincode":"10001"}}
2025-02-25 17:11:29 [INFO]: Response: POST /customer-api/customer/register - Status: 400 - Data: {"message":"User already exists"}
2025-02-25 17:12:39 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"John Doe","customerEmailId":"johndoe@example.com","contactNumber":"9876543210","password":"SecurePass123","gender":"Male","dateOfBirth":"1995-06-15","address":{"addressName":"Home","addressLine1":"123 Main Street","addressLine2":"Apt 4B","area":"Downtown","city":"New York","state":"NY","pincode":"10001"}}
2025-02-25 17:12:39 [INFO]: Response: POST /customer-api/customer/register - Status: 500 - Data: {"message":"Server Error"}
2025-02-25 17:13:12 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"John Doe","customerEmailId":"johndoe@example.com","contactNumber":"9876543210","password":"SecurePass123","gender":"Male","dateOfBirth":"1995-06-15","address":{"addressName":"Home","addressLine1":"123 Main Street","addressLine2":"Apt 4B","area":"Downtown","city":"New York","state":"NY","pincode":"10001"}}
2025-02-25 17:13:12 [INFO]: Response: POST /customer-api/customer/register - Status: 500 - Data: {"message":"Server Error"}
2025-02-25 17:13:29 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"John Doe","customerEmailId":"johndoe@example.com","contactNumber":"9876543210","password":"SecurePass123","gender":"Male","dateOfBirth":"1995-06-15","address":{"addressName":"Home","addressLine1":"123 Main Street","addressLine2":"Apt 4B","area":"Downtown","city":"New York","state":"NY","pincode":"10001"}}
2025-02-25 17:13:29 [INFO]: Response: POST /customer-api/customer/register - Status: 500 - Data: {"message":"Server Error"}
2025-02-25 17:13:30 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"John Doe","customerEmailId":"johndoe@example.com","contactNumber":"9876543210","password":"SecurePass123","gender":"Male","dateOfBirth":"1995-06-15","address":{"addressName":"Home","addressLine1":"123 Main Street","addressLine2":"Apt 4B","area":"Downtown","city":"New York","state":"NY","pincode":"10001"}}
2025-02-25 17:13:30 [INFO]: Response: POST /customer-api/customer/register - Status: 500 - Data: {"message":"Server Error"}
2025-02-25 17:13:47 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"John Doe","customerEmailId":"johndoe@example.com","contactNumber":"9876543210","password":"SecurePass123","gender":"Male","dateOfBirth":"1995-06-15","address":{"addressName":"Home","addressLine1":"123 Main Street","addressLine2":"Apt 4B","area":"Downtown","city":"New York","state":"NY","pincode":"10001"}}
2025-02-25 17:13:48 [INFO]: Response: POST /customer-api/customer/register - Status: 500 - Data: {"message":"Server Error"}
2025-02-25 17:14:16 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"John Doe","customerEmailId":"johndoe@example.com","contactNumber":"9876543210","password":"SecurePass123","gender":"Male","dateOfBirth":"1995-06-15","address":{"addressName":"Home","addressLine1":"123 Main Street","addressLine2":"Apt 4B","area":"Downtown","city":"New York","state":"NY","pincode":"10001"}}
2025-02-25 17:14:16 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully"}
2025-02-25 17:14:22 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"johndoe@example.com","password":"SecurePass123"}
2025-02-25 17:14:22 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3YmRhZDEwYTMxZGE5MWFkMzk5YjBmMiIsImlhdCI6MTc0MDQ4Mzg2MiwiZXhwIjoxNzQwNDg3NDYyfQ.wzvAyWMHFjqLGHhd0HVW8I-Bg0xnilI7qlYtWK1-nqo"}
2025-02-25 17:42:38 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"johndoe@example.com","password":"SecurePass123"}
2025-02-25 17:42:38 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3YmRhZDEwYTMxZGE5MWFkMzk5YjBmMiIsImlhdCI6MTc0MDQ4NTU1OCwiZXhwIjoxNzQwNDg5MTU4fQ.pM-Yd31yCc_OeUi27rN-4W5b0LMVtrZJP0aOUk4gmD8"}
2025-02-25 17:46:37 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"johndoe@example.com","password":"SecurePass123"}
2025-02-25 17:46:37 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","customerId":"67bdad10a31da91ad399b0f2"}
2025-02-25 18:19:01 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"johndoe@example.com","password":"SecurePass123"}
2025-02-25 18:19:02 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","customerId":"67bdad10a31da91ad399b0f2"}
2025-02-26 13:50:17 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password124@"}
2025-02-26 13:50:17 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-02-26 13:51:05 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password124@"}
2025-02-26 13:51:05 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-02-26 13:52:09 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password124@"}
2025-02-26 13:52:09 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-02-26 13:52:10 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password124@"}
2025-02-26 13:52:10 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-02-26 13:52:17 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"addressName":"Home","addressLine1":"123 Main Street","addressLine2":"Apt 4B","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348"}}
2025-02-26 13:52:18 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully"}
2025-02-26 13:52:20 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password124@"}
2025-02-26 13:52:20 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-02-26 13:52:33 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-02-26 13:52:34 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","customerId":"67becf3a938593121a005a93"}
2025-02-26 18:06:54 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"addressName":"Home","addressLine1":"123 Main Street","addressLine2":"Apt 4B","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348"}}
2025-02-26 18:06:54 [INFO]: Response: POST /customer-api/customer/register - Status: 400 - Data: {"message":"User already exists"}
2025-02-26 18:07:08 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-02-26 18:07:08 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","customerId":"67becf3a938593121a005a93"}
2025-02-26 18:07:24 [INFO]: Request: PUT /customer-api/customer/updateProfile - Body: {"id":"67be95bdd0245d5e2e25d651","customerName":"Arpan Halder","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-02-26 18:07:24 [INFO]: Response: PUT /customer-api/customer/updateProfile - Status: 404 - Data: {"message":"User not found"}
2025-02-26 18:07:37 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerEmailId":"arpanhalder@example.com","oldPassword":"Password123@","newPassword":"Password124@"}
2025-02-26 18:07:37 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 200 - Data: {"message":"Profile Updated Successfully","user":{"_id":"67becf3a938593121a005a93","customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","password":"$2b$10$6rhUYPhV5/DduQlUw5c6W.FbfGESKthaemZenhxQ6FAwL3s2H8jhC","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z","address":{"addressName":"Home","addressLine1":"123 Main Street","addressLine2":"Apt 4B","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348","_id":"67becf3a938593121a005a94"},"__v":0}}
2025-02-26 18:07:51 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password124@"}
2025-02-26 18:07:51 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","customerId":"67becf3a938593121a005a93"}
2025-02-27 10:41:56 [INFO]: Request: GET /medicine-api/medicines/101 - Body: {}
2025-02-27 10:43:03 [INFO]: Request: GET /medicine-api/medicines/101 - Body: {}
2025-02-27 10:43:52 [INFO]: Request: GET /medicine-api/medicines/101 - Body: {}
2025-02-27 10:44:47 [INFO]: Request: GET /medicine-api/medicines/101 - Body: {}
2025-02-27 10:45:52 [INFO]: Request: GET /medicine-api/medicines/101 - Body: {}
2025-02-27 11:10:49 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"addressName":"Home","addressLine1":"123 Main Street","addressLine2":"Apt 4B","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348"}}
2025-02-27 11:10:50 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully"}
2025-02-27 11:10:58 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-02-27 11:10:59 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","customerId":"67bffae2a93d3e45a9ef2cfe"}
2025-02-27 11:17:41 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-02-27 11:17:41 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","customerId":"67bffae2a93d3e45a9ef2cfe"}
2025-02-27 11:19:25 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-02-27 11:19:25 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","customerId":"67bffae2a93d3e45a9ef2cfe"}
2025-02-27 11:19:31 [INFO]: Request: PUT /customer-api/customer/updateProfile - Body: {"id":"67be95bdd0245d5e2e25d651","customerName":"Arpan Halder","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-02-27 11:19:31 [INFO]: Response: PUT /customer-api/customer/updateProfile - Status: 404 - Data: {"message":"User not found"}
2025-02-27 11:19:32 [INFO]: Request: PUT /customer-api/customer/updateProfile - Body: {"id":"67be95bdd0245d5e2e25d651","customerName":"Arpan Halder","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-02-27 11:19:32 [INFO]: Response: PUT /customer-api/customer/updateProfile - Status: 404 - Data: {"message":"User not found"}
2025-02-27 11:19:50 [INFO]: Request: PUT /customer-api/customer/updateProfile - Body: {"id":"67bffae2a93d3e45a9ef2cfe","customerName":"Arpan Halder","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-02-27 11:19:50 [INFO]: Response: PUT /customer-api/customer/updateProfile - Status: 200 - Data: {"message":"Profile Updated Successfully","user":{"_id":"67bffae2a93d3e45a9ef2cfe","customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449079","password":"$2b$10$qpqazmWyq0Jx9XHuMhRw0OpEA58hGfFjQ0OSDBIgzN5nIFlcbhSIe","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001","_id":"67bffcfea4614db971871bf6"},"__v":0}}
2025-02-27 11:21:27 [INFO]: Request: POST /customer-api/customer/isUserPresent - Body: {"customerId":"67bffae2a93d3e45a9ef2cfe"}
2025-02-27 11:21:27 [INFO]: Response: POST /customer-api/customer/isUserPresent - Status: 500 - Data: {"message":"Server Error"}
2025-02-27 11:23:17 [INFO]: Request: POST /customer-api/customer/isUserPresent - Body: {"customerId":"67bffae2a93d3e45a9ef2cfe"}
2025-02-27 11:23:17 [INFO]: Response: POST /customer-api/customer/isUserPresent - Status: 500 - Data: {"message":"Server Error"}
2025-02-27 11:23:41 [INFO]: Request: POST /customer-api/customer/isUserPresent - Body: {"customerId":"67bffae2a93d3e45a9ef2cfe"}
2025-02-27 11:23:41 [INFO]: Response: POST /customer-api/customer/isUserPresent - Status: 200 - Data: {"isPresent":true}
2025-02-27 11:23:45 [INFO]: Request: POST /customer-api/customer/isUserPresent - Body: {"customerId":"67bffae2a93d3e45a9ef2cfee"}
2025-02-27 11:23:45 [INFO]: Response: POST /customer-api/customer/isUserPresent - Status: 500 - Data: {"message":"Server Error"}
2025-02-27 11:23:57 [INFO]: Request: POST /customer-api/customer/isUserPresent - Body: {"customerId":"67bffae2a93d3e45a9ef2cfee"}
2025-02-27 11:23:57 [INFO]: Response: POST /customer-api/customer/isUserPresent - Status: 500 - Data: {"message":"Server Error"}
2025-02-27 11:24:29 [INFO]: Request: POST /customer-api/customer/isUserPresent - Body: {"customerId":"67bffae2a93d3e45a9ef2cfee"}
2025-02-27 11:24:29 [INFO]: Response: POST /customer-api/customer/isUserPresent - Status: 500 - Data: {"isPresent":false,"message":"Server Error"}
2025-02-27 11:24:34 [INFO]: Request: POST /customer-api/customer/isUserPresent - Body: {"customerId":"67bffae2a93d3e45a9ef2cfe"}
2025-02-27 11:24:35 [INFO]: Response: POST /customer-api/customer/isUserPresent - Status: 200 - Data: {"isPresent":true}
2025-02-27 11:32:22 [INFO]: Request: GET /medicine-api/medicines/67bdad10a31da91ad399b0f2 - Body: {}
2025-02-27 11:33:45 [INFO]: Request: POST /customer-api/customer/isUserPresent - Body: {"customerId":"67bffae2a93d3e45a9ef2cfe"}
2025-02-27 11:33:45 [INFO]: Response: POST /customer-api/customer/isUserPresent - Status: 200 - Data: {"isPresent":true}
2025-02-27 11:33:46 [INFO]: Request: POST /customer-api/customer/isUserPresent - Body: {"customerId":"67bffae2a93d3e45a9ef2cfe"}
2025-02-27 11:33:46 [INFO]: Response: POST /customer-api/customer/isUserPresent - Status: 200 - Data: {"isPresent":true}
2025-02-27 11:33:49 [INFO]: Request: POST /customer-api/customer/isUserPresent - Body: {"customerId":"67bdad10a31da91ad399b0f2"}
2025-02-27 11:33:49 [INFO]: Response: POST /customer-api/customer/isUserPresent - Status: 200 - Data: {"isPresent":false}
2025-02-27 11:33:51 [INFO]: Request: POST /customer-api/customer/isUserPresent - Body: {"customerId":"67bdad10a31da91ad399b0f2"}
2025-02-27 11:33:51 [INFO]: Response: POST /customer-api/customer/isUserPresent - Status: 200 - Data: {"isPresent":false}
2025-02-27 11:34:33 [INFO]: Request: POST /customer-api/customer/isUserPresent - Body: {"customerId":"67bdad10a31da91ad399b0f2"}
2025-02-27 11:34:33 [INFO]: Response: POST /customer-api/customer/isUserPresent - Status: 200 - Data: {"isPresent":false}
2025-02-27 11:34:53 [INFO]: Request: POST /customer-api/customer/isUserPresent - Body: {"customerId":"67bffae2a93d3e45a9ef2cfe"}
2025-02-27 11:34:53 [INFO]: Response: POST /customer-api/customer/isUserPresent - Status: 200 - Data: {"isPresent":true}
2025-02-27 11:38:08 [INFO]: Request: POST /customer-api/customer/isUserPresent - Body: {"customerId":"67bffae2a93d3e45a9ef2cfe"}
2025-02-27 11:38:08 [INFO]: Response: POST /customer-api/customer/isUserPresent - Status: 200 - Data: {"isPresent":true}
2025-02-27 13:47:46 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-02-27 13:47:46 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-02-27 13:47:52 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password124@"}
2025-02-27 13:47:52 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-02-27 13:48:12 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"addressName":"Home","addressLine1":"123 Main Street","addressLine2":"Apt 4B","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348"}}
2025-02-27 13:48:12 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully"}
2025-02-27 13:48:17 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password124@"}
2025-02-27 13:48:17 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-02-27 13:48:38 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-02-27 13:48:38 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","customerId":"67c01fc4a8f3085e9b45ff97"}
2025-02-27 14:17:18 [INFO]: Request: POST /customer-api/customer/isUserPresent - Body: {"customerId":"67bffae2a93d3e45a9ef2cfe"}
2025-02-27 14:17:18 [INFO]: Response: POST /customer-api/customer/isUserPresent - Status: 200 - Data: {"isPresent":false}
2025-02-27 14:17:34 [INFO]: Request: POST /customer-api/customer/isUserPresent - Body: {"customerId":"67c01fc4a8f3085e9b45ff97"}
2025-02-27 14:17:34 [INFO]: Response: POST /customer-api/customer/isUserPresent - Status: 200 - Data: {"isPresent":true}
2025-02-27 14:17:52 [INFO]: Request: POST /customer-api/customer/isUserPresent - Body: {"customerId":"67c01fc4a8f3085e9b45ff97"}
2025-02-27 14:17:52 [INFO]: Response: POST /customer-api/customer/isUserPresent - Status: 200 - Data: {"isPresent":true}
2025-02-27 14:17:55 [INFO]: Request: POST /customer-api/customer/isUserPresent - Body: {"customerId":"67c01fc4a8f3085e9b45ff97"}
2025-02-27 14:17:55 [INFO]: Response: POST /customer-api/customer/isUserPresent - Status: 200 - Data: {"isPresent":true}
2025-02-28 09:41:42 [INFO]: Request: GET /doc/ - Body: {}
2025-02-28 09:41:42 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-02-28 09:41:42 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-02-28 09:41:42 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-02-28 09:41:42 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-02-28 09:41:42 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-02-28 09:41:42 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "REST API",
      "description": ""
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/isUserPresent": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-02-28 09:41:43 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-02-28 10:47:40 [INFO]: Request: GET /doc/ - Body: {}
2025-02-28 10:47:40 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-02-28 10:47:40 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-02-28 10:47:40 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-02-28 10:47:40 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-02-28 10:47:40 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-02-28 10:47:40 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "REST API",
      "description": ""
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/isUserPresent": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-02-28 10:47:40 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-02-28 10:56:54 [INFO]: Request: GET /doc/ - Body: {}
2025-02-28 10:56:54 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-02-28 10:56:54 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-02-28 10:56:54 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-02-28 10:56:54 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-02-28 10:56:54 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-02-28 10:56:54 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "REST API",
      "description": ""
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/isUserPresent": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-02-28 10:59:57 [INFO]: Request: GET /doc/ - Body: {}
2025-02-28 10:59:58 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-02-28 10:59:58 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-02-28 10:59:58 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-02-28 10:59:58 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-02-28 10:59:58 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-02-28 10:59:58 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "REST API",
      "description": ""
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/isUserPresent": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/pageNumber/{pageNumber}/pageSize/{pageSize}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "pageNumber",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "pageSize",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "sortBy",
              "in": "query",
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/medicines/search": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/category/{category}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "category",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      },
      "/medicines/update-stock/medicine/{medicineId}": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "orderedQuantity": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          }
        }
      },
      "/medicines/{medicineId}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-02-28 10:59:58 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-02-28 10:59:59 [INFO]: Request: GET /doc/ - Body: {}
2025-02-28 10:59:59 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-02-28 10:59:59 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-02-28 10:59:59 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-02-28 10:59:59 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-02-28 10:59:59 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-02-28 10:59:59 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "REST API",
      "description": ""
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/isUserPresent": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/pageNumber/{pageNumber}/pageSize/{pageSize}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "pageNumber",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "pageSize",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "sortBy",
              "in": "query",
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/medicines/search": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/category/{category}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "category",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      },
      "/medicines/update-stock/medicine/{medicineId}": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "orderedQuantity": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          }
        }
      },
      "/medicines/{medicineId}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-02-28 10:59:59 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-02-28 11:00:00 [INFO]: Request: GET /doc/ - Body: {}
2025-02-28 11:00:00 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-02-28 11:00:00 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-02-28 11:00:00 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-02-28 11:00:00 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-02-28 11:00:00 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-02-28 11:00:00 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "REST API",
      "description": ""
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/isUserPresent": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/pageNumber/{pageNumber}/pageSize/{pageSize}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "pageNumber",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "pageSize",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "sortBy",
              "in": "query",
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/medicines/search": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/category/{category}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "category",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      },
      "/medicines/update-stock/medicine/{medicineId}": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "orderedQuantity": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          }
        }
      },
      "/medicines/{medicineId}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-02-28 11:00:00 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-02-28 11:00:00 [INFO]: Request: GET /doc/ - Body: {}
2025-02-28 11:00:00 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-02-28 11:00:00 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-02-28 11:00:00 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-02-28 11:00:00 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-02-28 11:00:00 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-02-28 11:00:00 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "REST API",
      "description": ""
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/isUserPresent": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/pageNumber/{pageNumber}/pageSize/{pageSize}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "pageNumber",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "pageSize",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "sortBy",
              "in": "query",
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/medicines/search": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/category/{category}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "category",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      },
      "/medicines/update-stock/medicine/{medicineId}": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "orderedQuantity": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          }
        }
      },
      "/medicines/{medicineId}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-02-28 11:00:01 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-02-28 11:00:01 [INFO]: Request: GET /doc/ - Body: {}
2025-02-28 11:00:01 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-02-28 11:00:01 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-02-28 11:00:01 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-02-28 11:00:01 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-02-28 11:00:01 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-02-28 11:00:01 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "REST API",
      "description": ""
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/isUserPresent": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/pageNumber/{pageNumber}/pageSize/{pageSize}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "pageNumber",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "pageSize",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "sortBy",
              "in": "query",
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/medicines/search": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/category/{category}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "category",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      },
      "/medicines/update-stock/medicine/{medicineId}": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "orderedQuantity": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          }
        }
      },
      "/medicines/{medicineId}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-02-28 11:00:01 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-02-28 11:05:15 [INFO]: Request: GET /doc/ - Body: {}
2025-02-28 11:05:15 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-02-28 11:05:15 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-02-28 11:05:15 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-02-28 11:05:15 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-02-28 11:05:15 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-02-28 11:05:15 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "REST API",
      "description": ""
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/isUserPresent": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/pageNumber/{pageNumber}/pageSize/{pageSize}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "pageNumber",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "pageSize",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "sortBy",
              "in": "query",
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/medicines/search": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/category/{category}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "category",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      },
      "/medicines/update-stock/medicine/{medicineId}": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "orderedQuantity": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          }
        }
      },
      "/medicines/{medicineId}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-02-28 11:05:15 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-02-28 11:05:18 [INFO]: Request: GET /doc/ - Body: {}
2025-02-28 11:05:18 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-02-28 11:05:18 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-02-28 11:05:18 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-02-28 11:05:18 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-02-28 11:05:18 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-02-28 11:05:18 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "REST API",
      "description": ""
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/isUserPresent": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/pageNumber/{pageNumber}/pageSize/{pageSize}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "pageNumber",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "pageSize",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "sortBy",
              "in": "query",
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/medicines/search": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/category/{category}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "category",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      },
      "/medicines/update-stock/medicine/{medicineId}": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "orderedQuantity": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          }
        }
      },
      "/medicines/{medicineId}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-02-28 11:05:18 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-02-28 11:05:19 [INFO]: Request: GET /doc/ - Body: {}
2025-02-28 11:05:19 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-02-28 11:05:19 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-02-28 11:05:19 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-02-28 11:05:19 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-02-28 11:05:19 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-02-28 11:05:19 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "REST API",
      "description": ""
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/isUserPresent": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/pageNumber/{pageNumber}/pageSize/{pageSize}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "pageNumber",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "pageSize",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "sortBy",
              "in": "query",
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/medicines/search": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/category/{category}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "category",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      },
      "/medicines/update-stock/medicine/{medicineId}": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "orderedQuantity": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          }
        }
      },
      "/medicines/{medicineId}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-02-28 11:05:19 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-02-28 11:05:44 [INFO]: Request: GET /doc/ - Body: {}
2025-02-28 11:05:44 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-02-28 11:05:44 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-02-28 11:05:44 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-02-28 11:05:44 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-02-28 11:05:44 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-02-28 11:05:44 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "title": "My API",
      "description": "ePharmacy API Documentation",
      "version": "1.0.0"
    },
    "host": "localhost:5001",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/isUserPresent": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/pageNumber/{pageNumber}/pageSize/{pageSize}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "pageNumber",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "pageSize",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "sortBy",
              "in": "query",
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/medicines/search": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/category/{category}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "category",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      },
      "/medicines/update-stock/medicine/{medicineId}": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "orderedQuantity": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          }
        }
      },
      "/medicines/{medicineId}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-02-28 11:05:44 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-02-28 11:05:45 [INFO]: Request: GET /doc/ - Body: {}
2025-02-28 11:05:45 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-02-28 11:05:45 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-02-28 11:05:45 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-02-28 11:05:45 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-02-28 11:05:45 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-02-28 11:05:45 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "title": "My API",
      "description": "ePharmacy API Documentation",
      "version": "1.0.0"
    },
    "host": "localhost:5001",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/isUserPresent": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/pageNumber/{pageNumber}/pageSize/{pageSize}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "pageNumber",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "pageSize",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "sortBy",
              "in": "query",
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/medicines/search": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/category/{category}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "category",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      },
      "/medicines/update-stock/medicine/{medicineId}": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "orderedQuantity": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          }
        }
      },
      "/medicines/{medicineId}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-02-28 11:05:45 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-02-28 11:05:46 [INFO]: Request: GET /doc/ - Body: {}
2025-02-28 11:05:46 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-02-28 11:05:46 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-02-28 11:05:46 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-02-28 11:05:46 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-02-28 11:05:46 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-02-28 11:05:46 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "title": "My API",
      "description": "ePharmacy API Documentation",
      "version": "1.0.0"
    },
    "host": "localhost:5001",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/isUserPresent": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/pageNumber/{pageNumber}/pageSize/{pageSize}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "pageNumber",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "pageSize",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "sortBy",
              "in": "query",
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/medicines/search": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/category/{category}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "category",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      },
      "/medicines/update-stock/medicine/{medicineId}": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "orderedQuantity": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          }
        }
      },
      "/medicines/{medicineId}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-02-28 11:05:46 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-02-28 11:07:33 [INFO]: Request: GET /doc/ - Body: {}
2025-02-28 11:07:33 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-02-28 11:07:33 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-02-28 11:07:33 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-02-28 11:07:33 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-02-28 11:07:33 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-02-28 11:07:33 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "title": "My API",
      "description": "ePharmacy API Documentation",
      "version": "1.0.0"
    },
    "host": "localhost:5001",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/isUserPresent": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/pageNumber/{pageNumber}/pageSize/{pageSize}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "pageNumber",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "pageSize",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "sortBy",
              "in": "query",
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/medicines/search": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/medicines/category/{category}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "category",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      },
      "/medicines/update-stock/medicine/{medicineId}": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "orderedQuantity": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          }
        }
      },
      "/medicines/{medicineId}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "name": "medicineId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-02-28 11:07:33 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-02-28 11:08:24 [INFO]: Request: GET /doc/ - Body: {}
2025-02-28 11:08:24 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-02-28 11:08:24 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-02-28 11:08:24 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-02-28 11:08:24 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-02-28 11:08:24 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-02-28 11:08:24 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "REST API",
      "description": ""
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/isUserPresent": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-02-28 11:08:25 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-02-28 13:22:48 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-02-28 13:22:48 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MwMWZjNGE4ZjMwODVlOWI0NWZmOTciLCJpYXQiOjE3NDA3MjkxNjgsImV4cCI6MTc0MDczNjM2OH0.xF-uZSwDyQ8VlQLrLbzT_DXXtYZqcsVyTA2a2Ma3y2w"}
2025-02-28 13:23:39 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-02-28 13:23:39 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MwMWZjNGE4ZjMwODVlOWI0NWZmOTciLCJpYXQiOjE3NDA3MjkyMTksImV4cCI6MTc0MDczNjQxOX0.SWkxPMofISd5sKLAs8TxZCg9rsdTxe4DOxtygAcv7bQ","user":{"_id":"67c01fc4a8f3085e9b45ff97","customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","password":"$2b$10$p6vp2etE61wK6PxYmC/e1eYlpbsdSv4fEYfl6.r/5q79PPhLSf8tS","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z","address":{"addressName":"Home","addressLine1":"123 Main Street","addressLine2":"Apt 4B","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348","_id":"67c01fc4a8f3085e9b45ff98"},"__v":0}}
2025-02-28 13:28:59 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"address":"Home","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348","country":"India"}}
2025-02-28 13:28:59 [INFO]: Response: POST /customer-api/customer/register - Status: 400 - Data: {"message":"User already exists"}
2025-02-28 13:29:20 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"address":"Home","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348","country":"India"}}
2025-02-28 13:29:21 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxNmNkODZmZTQ4NjYyYTk5ODAyYTIiLCJpYXQiOjE3NDA3Mjk1NjEsImV4cCI6MTc0MDczNjc2MX0._XmAQZsaKSqGeNy1qyp7qfmyBC-DKbE2aKi1X8tz5UQ"}
2025-02-28 13:30:25 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-02-28 13:30:25 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxNmNkODZmZTQ4NjYyYTk5ODAyYTIiLCJpYXQiOjE3NDA3Mjk2MjUsImV4cCI6MTc0MDczNjgyNX0.hZ8xZcaqFAO5g11QRrQ35Ib8lDI669GYjjNfWdWagA4","customerdata":{"customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-02-28 19:45:54 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"address":"Home","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348","country":"India"}}
2025-02-28 19:45:54 [INFO]: Response: POST /customer-api/customer/register - Status: 400 - Data: {"message":"User already exists"}
2025-02-28 19:46:12 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"address":"Home","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348","country":"India"}}
2025-02-28 19:46:12 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxYzUyYzZmZTQ4NjYyYTk5ODAyYTgiLCJpYXQiOjE3NDA3NTIxNzIsImV4cCI6MTc0MDc1OTM3Mn0.cplAs5rOjlV9MGwwJI7soqX4mydj6HqtQ1eZP4_zU7Y"}
2025-02-28 19:51:27 [INFO]: Request: POST /user-api/auth/register - Body: {"customerName":"Test Halder","customerEmailId":"arpanhalder7384@gmail.com","contactNumber":"7384190892","password":"sadasdas@ADs2","gender":"arpanhalder7384@gmail.com","dateOfBirth":"2001-01-01","address":{"address":"Karanjali, Kupli,  South 24 pgs,  743348","city":"Karanjali","state":"West Bengal","pincode":"743348","country":"India"}}
2025-02-28 19:52:44 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Test Halder","customerEmailId":"arpanhalder7384@gmail.com","contactNumber":"7384190892","password":"sadasdas@ADs2","gender":"arpanhalder7384@gmail.com","dateOfBirth":"2001-01-01","address":{"address":"Karanjali, Kupli,  South 24 pgs,  743348","city":"Karanjali","state":"West Bengal","pincode":"743348","country":"India"}}
2025-02-28 19:52:44 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxYzZiNDZmZTQ4NjYyYTk5ODAyYWMiLCJpYXQiOjE3NDA3NTI1NjQsImV4cCI6MTc0MDc1OTc2NH0.htU2XhQFeqghMC4xfha914W7-ToQSKjJMJHcidUrRkQ"}
2025-02-28 19:55:53 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Test Halder","customerEmailId":"arpanhalder7384@gmail.com","contactNumber":"7384190892","password":"dsdsdsd23sd@#S","gender":"arpanhalder7384@gmail.com","dateOfBirth":"1222-01-01","address":{"address":"Karanjali, Kupli,  South 24 pgs,  743348","city":"Karanjali","state":"West Bengal","pincode":"743348","country":"India"}}
2025-02-28 19:55:54 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxYzc3MjZmZTQ4NjYyYTk5ODAyYjAiLCJpYXQiOjE3NDA3NTI3NTQsImV4cCI6MTc0MDc1OTk1NH0.eKuISiLtTex6aIu83Ys74vEc5qy5voW7IUYlQufz1_M"}
2025-02-28 20:42:12 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Test Halder","customerEmailId":"arpanhalder7384@gmail.com","contactNumber":"7384190892","password":"cdsf b#C#R5","gender":"arpanhalder7384@gmail.com","dateOfBirth":"1222-01-01","address":{"address":"Karanjali, Kupli,  South 24 pgs,  743348","city":"Karanjali","state":"West Bengal","pincode":"743348","country":"India"}}
2025-02-28 20:42:12 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxZDI0YzZmZTQ4NjYyYTk5ODAyYjQiLCJpYXQiOjE3NDA3NTU1MzIsImV4cCI6MTc0MDc2MjczMn0.VLewZOmilAzwEeGhY_JpL-M-5kC_LT2UirGEOwnac6o"}
2025-02-28 20:47:44 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder7384@gmail.com","contactNumber":"7384190892","password":"asdasd@SDW2","gender":"arpanhalder7384@gmail.com","dateOfBirth":"2001-01-01","address":{"address":"Karanjali, Kupli,  South 24 pgs,  743348","city":"Karanjali","state":"West Bengal","pincode":"743348","country":"India"}}
2025-02-28 20:47:44 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxZDM5ODZmZTQ4NjYyYTk5ODAyYjgiLCJpYXQiOjE3NDA3NTU4NjQsImV4cCI6MTc0MDc2MzA2NH0.lTBGx29XTMjIg_7kEsJR3vdFNc2iMiC0w9lDDJsNMWk"}
2025-02-28 21:15:08 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-02-28 21:15:08 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxNmNkODZmZTQ4NjYyYTk5ODAyYTIiLCJpYXQiOjE3NDA3NTc1MDgsImV4cCI6MTc0MDc2NDcwOH0.WStlwaSWGDr0SZosL4tj_Z_R8nTZ3_jqdzTZbr0cbBg","customerdata":{"customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-02-28 21:16:16 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-02-28 21:16:16 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxNmNkODZmZTQ4NjYyYTk5ODAyYTIiLCJpYXQiOjE3NDA3NTc1NzYsImV4cCI6MTc0MDc2NDc3Nn0.0YAy3eROVUqtEu3yz2FCQy9WIIXm8CI9FCVcBqVPFLU","customerdata":{"customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-02-28 21:18:36 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"contactNumber"}
2025-02-28 21:18:36 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-02-28 21:18:58 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-02-28 21:18:58 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxNmNkODZmZTQ4NjYyYTk5ODAyYTIiLCJpYXQiOjE3NDA3NTc3MzgsImV4cCI6MTc0MDc2NDkzOH0.uF8t4LcApTCYLTwlM4s44rZAqI8S3vSLEni4ZwhoGWc","customerdata":{"customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-02-28 22:17:49 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-02-28 22:17:50 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxNmNkODZmZTQ4NjYyYTk5ODAyYTIiLCJpYXQiOjE3NDA3NjEyNzAsImV4cCI6MTc0MDc2ODQ3MH0.y5__JbVxHIWCFCibA2PEVX8aSfz6ZtPyS4N-s_E1gKY","customerdata":{"customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-02-28 22:25:19 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-02-28 22:25:19 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"Login Successful","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxNmNkODZmZTQ4NjYyYTk5ODAyYTIiLCJpYXQiOjE3NDA3NjE3MTksImV4cCI6MTc0MDc2ODkxOX0.Hfz0UMalOrveFJ-AYULQb0X-M0aAPy9VfcSWHJOZqIM","customerdata":{"customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-02-28 22:59:38 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"address":"Home","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348","country":"India"}}
2025-02-28 22:59:38 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxZjI4MmE4NTY4YTg1ZjIzY2JhMjEiLCJpYXQiOjE3NDA3NjM3NzgsImV4cCI6MTc0MDc3MDk3OH0.6DCTWkUM8gAooWRmt9VUoME9JTTi6yCplyrt4-NgHA8"}
2025-02-28 23:00:28 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"address":"Home","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348","country":"India"}}
2025-02-28 23:00:29 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxZjJiNTZlMTMyYzU3N2ZlNjkwZGIiLCJpYXQiOjE3NDA3NjM4MjksImV4cCI6MTc0MDc3MTAyOX0.CRJciV5LZ68QSHhNkhwNxsUh8_SkaaeNVpGLzYTwvKE"}
2025-02-28 23:05:08 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"address":"Home","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348","country":"India"}}
2025-02-28 23:05:08 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxZjNjYzk0YWU2OGM2YWIyZDkyYzciLCJpYXQiOjE3NDA3NjQxMDgsImV4cCI6MTc0MDc3MTMwOH0.BqPGolwo-3JM6fgEgbDn_F53U6UPhQC5SRksBVKkClE","customerId":"67c1f3cc94ae68c6ab2d92c7"}
2025-02-28 23:06:19 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-02-28 23:06:19 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxNmNkODZmZTQ4NjYyYTk5ODAyYTIiLCJpYXQiOjE3NDA3NjQxNzksImV4cCI6MTc0MDc3MTM3OX0.nL0m_vFCxCKJdlJFH1q7K9UYn9ki3A-EZWVD1EnVz50","customerdata":{"customerId":"67c16cd86fe48662a99802a2","customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-02-28 23:10:30 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-02-28 23:10:30 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxNmNkODZmZTQ4NjYyYTk5ODAyYTIiLCJpYXQiOjE3NDA3NjQ0MzAsImV4cCI6MTc0MDc3MTYzMH0.xwsZEgyLrb64uvKlLRVzYiDRr4EZ2h9loXAdYX4wcm8","customerdata":{"customerId":"67c16cd86fe48662a99802a2","customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-02-28 23:15:39 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-02-28 23:15:39 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxNmNkODZmZTQ4NjYyYTk5ODAyYTIiLCJpYXQiOjE3NDA3NjQ3MzksImV4cCI6MTc0MDc3MTkzOX0.FgYsZucGBpqMbm7UzNxOo3Aa48l0SizQTBGY8hanahg","customerdata":{"customerId":"67c16cd86fe48662a99802a2","customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-01 11:16:54 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-03-01 11:16:54 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxNmNkODZmZTQ4NjYyYTk5ODAyYTIiLCJpYXQiOjE3NDA4MDgwMTQsImV4cCI6MTc0MDgxNTIxNH0.zfESwX3wRbhhQYjMViu1cqvZIPI-5li8kmB9Bzz4-YE","customerdata":{"customerId":"67c16cd86fe48662a99802a2","customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-01 11:20:57 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-03-01 11:20:57 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxNmNkODZmZTQ4NjYyYTk5ODAyYTIiLCJpYXQiOjE3NDA4MDgyNTcsImV4cCI6MTc0MDgxNTQ1N30.dD-wFvr9TSEs5MG4c0CVgwZUysCvUrGMx6SBfAVmmnI","customerdata":{"customerId":"67c16cd86fe48662a99802a2","customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-01 12:16:00 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder7384@gmail.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"address":"Home","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348","country":"India"}}
2025-03-01 12:16:00 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyOGYwYjkwYzFlNDFkNzVjMjIiLCJpYXQiOjE3NDA4MTE1NjAsImV4cCI6MTc0MDgxODc2MH0.g9lt2j_MuZRZDAASxB04exFD9nVwsizO93ovStw4e9s","customerId":"67c2ad28f0b90c1e41d75c22"}
2025-03-01 12:16:07 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"address":"Home","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348","country":"India"}}
2025-03-01 12:16:07 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDA4MTE1NjcsImV4cCI6MTc0MDgxODc2N30.u_ge_ov9zyn5LYztQHBCjekO4GMHY1X7zPdw0HL0LyI","customerId":"67c2ad2ff0b90c1e41d75c26"}
2025-03-01 12:16:09 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"address":"Home","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348","country":"India"}}
2025-03-01 12:16:09 [INFO]: Response: POST /customer-api/customer/register - Status: 400 - Data: {"message":"User already exists"}
2025-03-01 12:16:40 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"dsdsdsdsd"}
2025-03-01 12:16:40 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-01 12:16:43 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"dsdsdsdsd"}
2025-03-01 12:16:43 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-01 12:16:44 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"dsdsdsdsd"}
2025-03-01 12:16:45 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-01 12:17:07 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-01 12:17:07 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyOGYwYjkwYzFlNDFkNzVjMjIiLCJpYXQiOjE3NDA4MTE2MjcsImV4cCI6MTc0MDgxODgyN30.1AabMmY3vzcVhLST4CXLdRYj89EW_DvB7kezZ1pSLwA","customerdata":{"customerId":"67c2ad28f0b90c1e41d75c22","customerName":"Arpan Halder","customerEmailId":"arpanhalder7384@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-01 16:41:49 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-01 16:41:49 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDA4Mjc1MDksImV4cCI6MTc0MDgzNDcwOX0.cZo_dB1CM1eixzO_5QM21ac5ZKWfLP1lYkPH7dV3lLs","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-01 18:55:44 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-01 18:55:44 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDA4MzU1NDQsImV4cCI6MTc0MDg0Mjc0NH0.jWu6hEVGcN2ykvBdJr3YpaAw2YPIqoIMcFhZatqOiG0","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-01 19:10:41 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-03-01 19:10:41 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxNmNkODZmZTQ4NjYyYTk5ODAyYTIiLCJpYXQiOjE3NDA4MzY0NDEsImV4cCI6MTc0MDg0MzY0MX0.jYVW5xO4UrAxH3CfSeqkrgPkz-Te9EcxQS9BkFf4nY4","customerdata":{"customerId":"67c16cd86fe48662a99802a2","customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-01 20:34:37 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-01 20:34:37 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDA4NDE0NzcsImV4cCI6MTc0MDg0ODY3N30.iMiDcjBSeC0hkzBlY78xTbGtVKd20gKqgZtjUvCDOw8","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-01 20:56:03 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-01 20:56:03 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDA4NDI3NjMsImV4cCI6MTc0MDg0OTk2M30.UHaTvLYO_mXSDbEJOuExEoc_7vaeBM5hUPY-FtSEWg8","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-02 14:11:08 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-02 14:11:08 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDA5MDQ4NjgsImV4cCI6MTc0MDkxMjA2OH0.w6pY70YPDLGaFXSR5EDV_WLwHpaJkfFTvPDGYzBgHd8","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-02 16:19:19 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-02 16:19:19 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDA5MTI1NTksImV4cCI6MTc0MDkxOTc1OX0.klQW2b9bVS9zUvLBeo1mf_bltxSZOLeCKOQ4Ud3eT-Y","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-02 18:22:28 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-02 18:22:29 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDA5MTk5NDksImV4cCI6MTc0MDkyNzE0OX0.dqzUWYCNxYb9DuSu8HnNrCITaKQfLqpMniPfYqYpn-8","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-02 18:56:47 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-02 18:56:47 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDA5MjIwMDcsImV4cCI6MTc0MDkyOTIwN30.3s-MJNTfJf7KiTb-Ineo-BgpI1U8lQu-RQnBIIzBW2s","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-02 19:44:35 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"dasdasdasdasdasd"}
2025-03-02 19:44:35 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-02 19:44:38 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"dasdasdasdasdasd"}
2025-03-02 19:44:38 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-02 19:44:39 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"dasdasdasdasdasd"}
2025-03-02 19:44:39 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-02 19:44:53 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@ "}
2025-03-02 19:44:54 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-02 19:44:56 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-02 19:44:56 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDA5MjQ4OTYsImV4cCI6MTc0MDkzMjA5Nn0.vYQq4IhMbvRQSsyrVAbaxWz7dV20EdUVBLd7nKLi9ls","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-02 19:50:24 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"7384190892","password":"Password123@","gender":"arpanhalder@gmail.com","dateOfBirth":"2001-01-01","address":{"address":"Karanjali, Kupli,  South 24 pgs,  743348","city":"Karanjali","state":"West Bengal","pincode":"743348","country":"India"}}
2025-03-02 19:50:24 [INFO]: Response: POST /customer-api/customer/register - Status: 400 - Data: {"message":"User already exists"}
2025-03-02 19:50:25 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"7384190892","password":"Password123@","gender":"arpanhalder@gmail.com","dateOfBirth":"2001-01-01","address":{"address":"Karanjali, Kupli,  South 24 pgs,  743348","city":"Karanjali","state":"West Bengal","pincode":"743348","country":"India"}}
2025-03-02 19:50:25 [INFO]: Response: POST /customer-api/customer/register - Status: 400 - Data: {"message":"User already exists"}
2025-03-02 19:52:36 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"7384190892","password":"Password123@","gender":"arpanhalder@gmail.com","dateOfBirth":"2001-01-01","address":{"address":"Karanjali, Kupli,  South 24 pgs,  743348","city":"Karanjali","state":"West Bengal","pincode":"743348","country":"India"}}
2025-03-02 19:52:36 [INFO]: Response: POST /customer-api/customer/register - Status: 400 - Data: {"message":"User already exists"}
2025-03-02 19:52:37 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"7384190892","password":"Password123@","gender":"arpanhalder@gmail.com","dateOfBirth":"2001-01-01","address":{"address":"Karanjali, Kupli,  South 24 pgs,  743348","city":"Karanjali","state":"West Bengal","pincode":"743348","country":"India"}}
2025-03-02 19:52:37 [INFO]: Response: POST /customer-api/customer/register - Status: 400 - Data: {"message":"User already exists"}
2025-03-02 19:52:59 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"7384190892","password":"Password123@","gender":"arpanhalder@gmail.com","dateOfBirth":"2001-01-01","address":{"address":"Karanjali, Kupli,  South 24 pgs,  743348","city":"Karanjali","state":"West Bengal","pincode":"743348","country":"India"}}
2025-03-02 19:52:59 [INFO]: Response: POST /customer-api/customer/register - Status: 400 - Data: {"message":"User already exists"}
2025-03-02 20:05:58 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder2@gmail.com","contactNumber":"7384190892","password":"Password123@","gender":"arpanhalder2@gmail.com","dateOfBirth":"2002-01-02","address":{"address":"Karanjali, Kupli,  South 24 pgs,  743348","city":"Karanjali","state":"West Bengal","pincode":"743348","country":"India"}}
2025-03-02 20:05:58 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M0NmNjZTExZjdjYTk0MzZiNTg1NDEiLCJpYXQiOjE3NDA5MjYxNTgsImV4cCI6MTc0MDkzMzM1OH0.lWeer7GXR_b0VeYBhjkELpANWpk5fCC8xtDtGCDQjTM","customerId":"67c46cce11f7ca9436b58541"}
2025-03-02 22:52:46 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@gmail.com","password":"Password123@"}
2025-03-02 22:52:46 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M0NmNjZTExZjdjYTk0MzZiNTg1NDEiLCJpYXQiOjE3NDA5MzYxNjYsImV4cCI6MTc0MDk0MzM2Nn0.Dr5JXisZwQmAzSQmCylh2Y_7gxGDGZ9kYTJOk_9X4DA","customerdata":{"customerId":"67c46cce11f7ca9436b58541","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@gmail.com","contactNumber":"7384190892","gender":"arpanhalder2@gmail.com","dateOfBirth":"2002-01-02T00:00:00.000Z"}}
2025-03-02 22:54:18 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-02 22:54:18 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDA5MzYyNTgsImV4cCI6MTc0MDk0MzQ1OH0.nkscv2XnuGqM157Vn0wp_FevxDiICuQdItabQhq-lzs","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-02 22:59:16 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder3@gmail.com","password":"Password123@"}
2025-03-02 22:59:16 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 18:36:17 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 18:36:17 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMDcxNzcsImV4cCI6MTc0MTAxNDM3N30.Y9GdXJUhaUMO_Pajk2WukLTHhq3fFk-TljbJjFNipQA","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 18:55:11 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"address":"Home","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348","country":"India"}}
2025-03-03 18:55:11 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDEwMDgzMTEsImV4cCI6MTc0MTAxNTUxMX0.cw4sf_Td1iOgsHrTgJYJdjRuRJT7WlfStOHEcBC3Yek","customerId":"67c5adb79b1b78bb0792cc20"}
2025-03-03 18:56:54 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password123@"}
2025-03-03 18:56:54 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDEwMDg0MTQsImV4cCI6MTc0MTAxNTYxNH0._vKYQO2OsXBW1BP56ACAf0L-AZJf2fqQ1PEuA4BnL4M","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 19:19:15 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password1234@"}
2025-03-03 19:19:15 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:19:19 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 19:19:19 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMDk3NTksImV4cCI6MTc0MTAxNjk1OX0.4eSzvvpoYyMTHEYnGg17MP3lkdLq4MjFVvjmJRSQwJ0","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 19:37:44 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"pASSWORD123@"}
2025-03-03 19:37:44 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:50:16 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Pasword123@"}
2025-03-03 19:50:16 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:50:20 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 19:50:20 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTE2MjAsImV4cCI6MTc0MTAxODgyMH0.aMTTx_Xz-BrjiVI4rxjOSF5nWuRYPpSNgh9K0tcqJtc","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 19:52:46 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"assadasdasdas"}
2025-03-03 19:52:46 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:53:46 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"sasasassas"}
2025-03-03 19:53:46 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:53:59 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"sasaasdasdasd"}
2025-03-03 19:53:59 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:54:20 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 19:54:20 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:54:25 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"dadasdasdasd"}
2025-03-03 19:54:25 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:54:38 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 19:54:38 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:55:01 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Passwordf123@"}
2025-03-03 19:55:01 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:55:14 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 19:55:15 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTE5MTUsImV4cCI6MTc0MTAxOTExNX0.-GVeB2zcM-mCCVg2W-uwpTH1GzZfKDYqs3qxw9-LiI4","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 19:55:37 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 19:55:37 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:56:23 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"csdffdsfsdfsdf"}
2025-03-03 19:56:23 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:57:08 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"asdsadasdasdas"}
2025-03-03 19:57:08 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:57:28 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"dasdasdasdasd"}
2025-03-03 19:57:28 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:57:55 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"sdasdasdasdasd"}
2025-03-03 19:57:55 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:58:21 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.comasdasdasd","password":"dasdasdasdasdasdasdas"}
2025-03-03 19:58:21 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:58:27 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.comasdasdasd","password":"dasdasdasdasdasdasdas"}
2025-03-03 19:58:27 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:58:27 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.comasdasdasd","password":"dasdasdasdasdasdasdas"}
2025-03-03 19:58:27 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:58:40 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.comasdasdasd","password":"Password123@"}
2025-03-03 19:58:40 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 19:58:46 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 19:58:46 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTIxMjYsImV4cCI6MTc0MTAxOTMyNn0.QUJkg65DkmPSfrngs-TTKO0KoAjnJ24VdJ5R6IFjogU","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 20:31:08 [INFO]: Request: PUT /customer-api/customer/updateProfile - Body: {"id":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","contactNumber":"8918449079","gender":"arpanhalder@gmail.com"}
2025-03-03 20:31:08 [INFO]: Response: PUT /customer-api/customer/updateProfile - Status: 200 - Data: {"message":"Profile Updated Successfully","user":{"_id":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449079","password":"$2b$10$1S8h.f6E.x1mmPHnu4VFCeGUFsBVcxl97Mo9UEexlNN.Ccrs0tyFa","gender":"arpanhalder@gmail.com","dateOfBirth":"1999-09-21T00:00:00.000Z","address":{"address":"Home","city":"Karanjali","state":"WB","pincode":"743348","country":"India","_id":"67c2ad2ff0b90c1e41d75c27"},"__v":0}}
2025-03-03 20:34:36 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 20:34:36 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTQyNzYsImV4cCI6MTc0MTAyMTQ3Nn0.NyJq450T6LYU8vku-FqlkKxKJQSNaPk71y9qLyPM7hQ","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449079","gender":"arpanhalder@gmail.com","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 20:34:53 [INFO]: Request: PUT /customer-api/customer/updateProfile - Body: {"id":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","contactNumber":"8918449078","gender":"arpanhalder@gmail.com"}
2025-03-03 20:34:53 [INFO]: Response: PUT /customer-api/customer/updateProfile - Status: 200 - Data: {"message":"Profile Updated Successfully","user":{"_id":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","password":"$2b$10$1S8h.f6E.x1mmPHnu4VFCeGUFsBVcxl97Mo9UEexlNN.Ccrs0tyFa","gender":"arpanhalder@gmail.com","dateOfBirth":"1999-09-21T00:00:00.000Z","address":{"address":"Home","city":"Karanjali","state":"WB","pincode":"743348","country":"India","_id":"67c2ad2ff0b90c1e41d75c27"},"__v":0}}
2025-03-03 20:37:03 [INFO]: Request: PUT /customer-api/customer/updateProfile - Body: {"id":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","contactNumber":"8918449078","gender":"Male"}
2025-03-03 20:37:03 [INFO]: Response: PUT /customer-api/customer/updateProfile - Status: 200 - Data: {"message":"Profile Updated Successfully","user":{"_id":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","password":"$2b$10$1S8h.f6E.x1mmPHnu4VFCeGUFsBVcxl97Mo9UEexlNN.Ccrs0tyFa","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z","address":{"address":"Home","city":"Karanjali","state":"WB","pincode":"743348","country":"India","_id":"67c2ad2ff0b90c1e41d75c27"},"__v":0}}
2025-03-03 20:37:33 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 20:37:34 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTQ0NTQsImV4cCI6MTc0MTAyMTY1NH0.irbKfyqvuVM7Hj7Aw4IEWV3UB3DbLyjqvoIECSlbWWg","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 21:41:01 [INFO]: Request: PUT /customer-api/customer/updateProfile - Body: {"id":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","contactNumber":"8918449012","gender":"Male"}
2025-03-03 21:41:01 [INFO]: Response: PUT /customer-api/customer/updateProfile - Status: 200 - Data: {"message":"Profile Updated Successfully","user":{"_id":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449012","password":"$2b$10$1S8h.f6E.x1mmPHnu4VFCeGUFsBVcxl97Mo9UEexlNN.Ccrs0tyFa","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z","address":{"address":"Home","city":"Karanjali","state":"WB","pincode":"743348","country":"India","_id":"67c2ad2ff0b90c1e41d75c27"},"__v":0}}
2025-03-03 21:42:33 [INFO]: Request: PUT /customer-api/customer/updateProfile - Body: {"id":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","contactNumber":"8918449013","gender":"Male"}
2025-03-03 21:42:33 [INFO]: Response: PUT /customer-api/customer/updateProfile - Status: 200 - Data: {"message":"Profile Updated Successfully","user":{"_id":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","password":"$2b$10$1S8h.f6E.x1mmPHnu4VFCeGUFsBVcxl97Mo9UEexlNN.Ccrs0tyFa","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z","address":{"address":"Home","city":"Karanjali","state":"WB","pincode":"743348","country":"India","_id":"67c2ad2ff0b90c1e41d75c27"},"__v":0}}
2025-03-03 21:56:12 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 21:56:12 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTkxNzIsImV4cCI6MTc0MTAyNjM3Mn0.wz6pYB0LJ1QfGvZWdXLj_qraVJij4pdibh8KJaSi-O8","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 21:56:16 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 21:56:16 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTkxNzYsImV4cCI6MTc0MTAyNjM3Nn0.fpJRcrSPa79yN_pluyQDtAz00RL1wzexg9ap1Km2rAA","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 21:56:17 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 21:56:17 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTkxNzcsImV4cCI6MTc0MTAyNjM3N30.OD8LCqd85FTXqPwAUbDNOKVLRrRxmOZtnmhnGloYt7I","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 21:56:26 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 21:56:27 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTkxODcsImV4cCI6MTc0MTAyNjM4N30.9NEOsIJHE1tmBIKleMHPAbI9UUm5l219UJexm1Uvkg0","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 21:56:40 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 21:56:40 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTkyMDAsImV4cCI6MTc0MTAyNjQwMH0.OdeZ6cdYVqxteho_dqhzNa_X2pgUnPnyD8iVVB8fg6k","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 21:57:09 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 21:57:09 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTkyMjksImV4cCI6MTc0MTAyNjQyOX0.VoEIW13aAms1iaNZrfYmK-v0GsErGQuQaVYf6Y4ZPxM","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 21:57:30 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 21:57:30 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTkyNTAsImV4cCI6MTc0MTAyNjQ1MH0.6dquDnlSlIwsf3goMGIBqp1l14OSJarwSTSfZ--3vrA","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 21:57:51 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 21:57:51 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTkyNzEsImV4cCI6MTc0MTAyNjQ3MX0.msWUv5d4bKihGmvLDZcgbFtTpODdILxMaHn1vpehRxk","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 21:58:37 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 21:58:37 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTkzMTcsImV4cCI6MTc0MTAyNjUxN30.HWuMpdQUZLCfR6JO4yk7NUrVCpATslC4WopwH2g93XI","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 21:58:54 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 21:58:54 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTkzMzQsImV4cCI6MTc0MTAyNjUzNH0.q9T3x_7aC8_dK7ZP1XnIHONh5qSSS0fShvOUD5W_lvw","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 21:59:41 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@@"}
2025-03-03 21:59:41 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 21:59:42 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@@"}
2025-03-03 21:59:42 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 21:59:43 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@@"}
2025-03-03 21:59:43 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 21:59:45 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 21:59:45 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTkzODUsImV4cCI6MTc0MTAyNjU4NX0.9ckDLXY_Wzd3_jS8hQHtNP6ghxWoJ5dE04yjRpblSgs","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 22:00:03 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 22:00:04 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTk0MDQsImV4cCI6MTc0MTAyNjYwNH0.F-NwgzWnS1wQKVf7M0nUlyxnVOhLCc7-dKLGmmD2XdY","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 22:00:13 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"sasasasas"}
2025-03-03 22:00:13 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:00:13 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"sasasasas"}
2025-03-03 22:00:14 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:00:14 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"sasasasas"}
2025-03-03 22:00:14 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:00:15 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"sasasasas"}
2025-03-03 22:00:15 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:00:16 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"sasasasas"}
2025-03-03 22:00:16 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:00:18 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"sasasasas"}
2025-03-03 22:00:18 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:00:24 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:00:24 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:00:27 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 22:00:27 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTk0MjcsImV4cCI6MTc0MTAyNjYyN30.qYrAfGFppZCR4z9HpAwvAz233dwTLBZk6_w0YSCoxbg","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 22:00:52 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 22:00:52 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTk0NTIsImV4cCI6MTc0MTAyNjY1Mn0.ZqNOQExGt4iUW3oWZ9ji_QC76cG_5KeMMHukGssMyh8","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 22:01:02 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"dsdsadasdasd"}
2025-03-03 22:01:02 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:01:02 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"dsdsadasdasd"}
2025-03-03 22:01:02 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:01:13 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 22:01:13 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTk0NzMsImV4cCI6MTc0MTAyNjY3M30.FDO58f4lzFayYzsioB_67RVW1OGGN6Dsl5G6vt1rFZs","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 22:02:14 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"sdasdasdasdasd"}
2025-03-03 22:02:14 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:02:15 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"sdasdasdasdasd"}
2025-03-03 22:02:15 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:02:17 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"sdasdasdasdasd"}
2025-03-03 22:02:17 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:02:28 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:02:28 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:02:30 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:02:30 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:02:36 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:02:36 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:02:37 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:02:37 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:02:40 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:02:40 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:02:43 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:02:43 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:02:44 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:02:44 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:02:44 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:02:44 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:02:45 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:02:45 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:02:46 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:02:46 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:03:23 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:03:23 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:03:23 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:03:23 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:03:25 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:03:25 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:03:27 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:03:27 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:03:29 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:03:29 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:03:31 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:03:31 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:04:09 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:04:09 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:04:11 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:04:11 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:04:15 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:04:15 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:04:18 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:04:18 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:04:28 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:04:28 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:04:29 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:04:29 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:04:30 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:04:30 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:06:49 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"Password123@"}
2025-03-03 22:06:49 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:06:57 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"aedadasdasdasdasd"}
2025-03-03 22:06:57 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:06:59 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"aedadasdasdasdasd"}
2025-03-03 22:06:59 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:07:03 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"aedadasdasdasdasd"}
2025-03-03 22:07:03 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:07:13 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 22:07:13 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTk4MzMsImV4cCI6MTc0MTAyNzAzM30.n_3MKOAvVplMRy1sucNQYFSor-GjLdgG6r2HL13eI70","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 22:07:15 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 22:07:15 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTk4MzUsImV4cCI6MTc0MTAyNzAzNX0.-LTtaB4M_MHYt-aURr4TvCsoQR-h5l60Z9mv82BFb4o","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 22:07:55 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 22:07:55 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTk4NzUsImV4cCI6MTc0MTAyNzA3NX0.AK07anIrr1Bf8xRypq6O0BNEkXONLj31AkkIlmMOwMI","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 22:08:03 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 22:08:03 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMTk4ODMsImV4cCI6MTc0MTAyNzA4M30.K2ipTyJhMgbuboxhyst9FixgFpMFzi4j2FmLSuhzl2A","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 22:09:11 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"asdasdasdasd"}
2025-03-03 22:09:11 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:09:52 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"dsfdsfdsfsdfsdf"}
2025-03-03 22:09:52 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:10:00 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"fsdfdsfsdfdsfdsf"}
2025-03-03 22:10:00 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:10:54 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"asdasdasdasdasd"}
2025-03-03 22:10:54 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:11:25 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"sasasasasasa"}
2025-03-03 22:11:25 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:11:26 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"sasasasasasa"}
2025-03-03 22:11:26 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-03 22:11:43 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-03 22:11:43 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwMjAxMDMsImV4cCI6MTc0MTAyNzMwM30.lSSuYcFSzakKHxHJ7fgIIRWv-iXkRWpsiJscvyMX_lQ","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-03 22:15:46 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"7384190892","password":"Password123@","gender":"arpanhalder@gmail.com","dateOfBirth":"1999-01-01","address":{"address":"Karanjali, Kupli,  South 24 pgs,  743348","city":"Karanjali","state":"West Bengal","pincode":"743348","country":"India"}}
2025-03-03 22:15:46 [INFO]: Response: POST /customer-api/customer/register - Status: 400 - Data: {"message":"User already exists"}
2025-03-03 22:16:00 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@test.com","contactNumber":"7384190892","password":"Password123@","gender":"arpanhalder@test.com","dateOfBirth":"1999-01-01","address":{"address":"Karanjali, Kupli,  South 24 pgs,  743348","city":"Karanjali","state":"West Bengal","pincode":"743348","country":"India"}}
2025-03-03 22:16:00 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1ZGNjOGM0NWI4NGE3NTkxMmQxZjUiLCJpYXQiOjE3NDEwMjAzNjAsImV4cCI6MTc0MTAyNzU2MH0.ewdMIWn28dRn44A0HKBpDZBlXkS286uNxaUFrW8QB2o","customerId":"67c5dcc8c45b84a75912d1f5"}
2025-03-03 22:26:57 [INFO]: Request: GET /doc/ - Body: {}
2025-03-03 22:26:57 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-03-03 22:26:57 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-03-03 22:26:57 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-03-03 22:26:57 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-03-03 22:26:57 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-03-03 22:26:57 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "REST API",
      "description": ""
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-03-03 22:26:57 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-03-03 22:46:06 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@test.com","password":"Password123@"}
2025-03-03 22:46:06 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1ZGNjOGM0NWI4NGE3NTkxMmQxZjUiLCJpYXQiOjE3NDEwMjIxNjYsImV4cCI6MTc0MTAyOTM2Nn0.BBWMtpGJG2Q4TnUEQX574CGr6psKDAr_wk4NWXjHVlg","customerdata":{"customerId":"67c5dcc8c45b84a75912d1f5","customerName":"Arpan Halder","customerEmailId":"arpanhalder@test.com","contactNumber":"7384190892","gender":"arpanhalder@test.com","dateOfBirth":"1999-01-01T00:00:00.000Z"}}
2025-03-04 07:45:13 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-04 07:45:13 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwNTQ1MTMsImV4cCI6MTc0MTA2MTcxM30.X1_UOrsfBs0Nlr8PjKuMamcVrnqjF3DyvY82wsknVDQ","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-04 07:45:37 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@@"}
2025-03-04 07:45:38 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-04 07:45:44 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-04 07:45:44 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwNTQ1NDQsImV4cCI6MTc0MTA2MTc0NH0.en2HHqnN-MBzO7UrmX0A7BjxcJdWqSErWpBrZemgMUk","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-04 07:50:42 [INFO]: Request: PUT /customer-api/customer/updateProfile - Body: {"id":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","contactNumber":"8918449013","gender":"Female"}
2025-03-04 07:50:42 [INFO]: Response: PUT /customer-api/customer/updateProfile - Status: 200 - Data: {"message":"Profile Updated Successfully","user":{"_id":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","password":"$2b$10$1S8h.f6E.x1mmPHnu4VFCeGUFsBVcxl97Mo9UEexlNN.Ccrs0tyFa","gender":"Female","dateOfBirth":"1999-09-21T00:00:00.000Z","address":{"address":"Home","city":"Karanjali","state":"WB","pincode":"743348","country":"India","_id":"67c2ad2ff0b90c1e41d75c27"},"__v":0}}
2025-03-04 07:50:51 [INFO]: Request: PUT /customer-api/customer/updateProfile - Body: {"id":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","contactNumber":"8918449013","gender":"Male"}
2025-03-04 07:50:51 [INFO]: Response: PUT /customer-api/customer/updateProfile - Status: 200 - Data: {"message":"Profile Updated Successfully","user":{"_id":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449013","password":"$2b$10$1S8h.f6E.x1mmPHnu4VFCeGUFsBVcxl97Mo9UEexlNN.Ccrs0tyFa","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z","address":{"address":"Home","city":"Karanjali","state":"WB","pincode":"743348","country":"India","_id":"67c2ad2ff0b90c1e41d75c27"},"__v":0}}
2025-03-04 07:51:08 [INFO]: Request: PUT /customer-api/customer/updateProfile - Body: {"id":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","contactNumber":"8918449078","gender":"Male"}
2025-03-04 07:51:08 [INFO]: Response: PUT /customer-api/customer/updateProfile - Status: 200 - Data: {"message":"Profile Updated Successfully","user":{"_id":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","password":"$2b$10$1S8h.f6E.x1mmPHnu4VFCeGUFsBVcxl97Mo9UEexlNN.Ccrs0tyFa","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z","address":{"address":"Home","city":"Karanjali","state":"WB","pincode":"743348","country":"India","_id":"67c2ad2ff0b90c1e41d75c27"},"__v":0}}
2025-03-04 07:52:27 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-04 07:52:27 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwNTQ5NDcsImV4cCI6MTc0MTA2MjE0N30.TYUIxt1eu94vaxnUdCGpV-eHnWKNByJ2q3-fXW3bg5w","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-04 08:14:36 [INFO]: Request: GET /doc/ - Body: {}
2025-03-04 08:14:36 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-03-04 08:14:36 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-03-04 08:14:36 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-03-04 08:14:36 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-03-04 08:14:36 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-03-04 08:14:36 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "REST API",
      "description": ""
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-03-04 08:14:37 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-03-04 08:14:37 [INFO]: Request: GET /doc/ - Body: {}
2025-03-04 08:14:37 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-03-04 08:14:37 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-03-04 08:14:37 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-03-04 08:14:37 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-03-04 08:14:37 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-03-04 08:14:37 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "REST API",
      "description": ""
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updateProfile": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-03-04 08:14:37 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-03-04 08:25:43 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password123@"}
2025-03-04 08:25:43 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDEwNTY5NDMsImV4cCI6MTc0MTA2NDE0M30.7j2qRsaWByLvV1QjAukWF3iz06_BzkhVMeMHA4C4tf4","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-04 08:27:00 [INFO]: Request: PUT /customer-api/customer/updateProfile - Body: {"id":"67bffae2a93d3e45a9ef2cfe","customerName":"Arpan Halder","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-03-04 08:27:00 [INFO]: Response: PUT /customer-api/customer/updateProfile - Status: 401 - Data: {"message":"Access Denied. No token provided."}
2025-03-04 08:28:24 [INFO]: Request: PUT /customer-api/customer/updateProfile - Body: {"id":"67bffae2a93d3e45a9ef2cfe","customerName":"Arpan Halder","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-03-04 08:28:24 [INFO]: Response: PUT /customer-api/customer/updateProfile - Status: 404 - Data: {"message":"User not found"}
2025-03-04 08:28:52 [INFO]: Request: PUT /customer-api/customer/updateProfile - Body: {"id":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-03-04 08:28:52 [INFO]: Response: PUT /customer-api/customer/updateProfile - Status: 200 - Data: {"message":"Profile Updated Successfully","user":{"_id":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","password":"$2b$10$naldzf0J6S0it9j/y/N2YOZl6ufP3XPjCyvhvKh42tYOHZ83dsW6q","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z","address":{"city":"Los Angeles","state":"CA","pincode":"90001","_id":"67c66c6c44298f456247116b"},"__v":0}}
2025-03-04 08:29:51 [INFO]: Request: PUT /customer-api/customer/updateProfile - Body: {"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-03-04 08:29:51 [INFO]: Response: PUT /customer-api/customer/updateProfile - Status: 200 - Data: {"message":"Profile Updated Successfully","user":{"_id":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","password":"$2b$10$naldzf0J6S0it9j/y/N2YOZl6ufP3XPjCyvhvKh42tYOHZ83dsW6q","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z","address":{"city":"Los Angeles","state":"CA","pincode":"90001","_id":"67c66ca7c6314f88be18f6c2"},"__v":0}}
2025-03-04 08:31:13 [INFO]: Request: PUT /customer-api/customer/updateProfile - Body: {"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-03-04 08:31:13 [INFO]: Response: PUT /customer-api/customer/updateProfile - Status: 200 - Data: {"message":"Profile Updated Successfully"}
2025-03-04 08:37:21 [INFO]: Request: PUT /customer-api/customer/67c5adb79b1b78bb0792cc20 - Body: {"customerName":"Arpan Halder","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-03-04 08:37:21 [INFO]: Response: PUT /customer-api/customer/67c5adb79b1b78bb0792cc20 - Status: 200 - Data: {"message":"Profile Updated Successfully"}
2025-03-04 08:37:22 [INFO]: Request: PUT /customer-api/customer/67c5adb79b1b78bb0792cc20 - Body: {"customerName":"Arpan Halder","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-03-04 08:37:22 [INFO]: Response: PUT /customer-api/customer/67c5adb79b1b78bb0792cc20 - Status: 200 - Data: {"message":"Profile Updated Successfully"}
2025-03-04 08:39:34 [INFO]: Request: PUT /customer-api/customer/67c2ad2ff0b90c1e41d75c26 - Body: {"customerName":"Arpan Halder","contactNumber":"8918449078","gender":"Female"}
2025-03-04 08:39:34 [INFO]: Response: PUT /customer-api/customer/67c2ad2ff0b90c1e41d75c26 - Status: 200 - Data: {"message":"Profile Updated Successfully"}
2025-03-04 08:39:44 [INFO]: Request: PUT /customer-api/customer/67c2ad2ff0b90c1e41d75c26 - Body: {"customerName":"Arpan Halder","contactNumber":"8918449078","gender":"Male"}
2025-03-04 08:39:44 [INFO]: Response: PUT /customer-api/customer/67c2ad2ff0b90c1e41d75c26 - Status: 200 - Data: {"message":"Profile Updated Successfully"}
2025-03-04 08:40:00 [INFO]: Request: PUT /customer-api/customer/67c5adb79b1b78bb0792cc20 - Body: {"customerName":"Arpan Halder","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-03-04 08:40:00 [INFO]: Response: PUT /customer-api/customer/67c5adb79b1b78bb0792cc20 - Status: 200 - Data: {"message":"Profile Updated Successfully"}
2025-03-04 08:42:00 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 08:42:00 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 401 - Data: {"message":"Access Denied. No token provided."}
2025-03-04 08:42:18 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 08:42:18 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 08:43:25 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 08:43:25 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 08:43:59 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 08:43:59 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 08:44:00 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 08:44:00 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 08:44:01 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 08:44:01 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 08:44:02 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 08:44:02 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 08:44:03 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 08:44:03 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 08:44:04 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 08:44:04 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 08:44:05 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 08:44:05 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 08:44:12 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 08:44:12 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 08:45:09 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 08:45:09 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 08:45:11 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 08:45:11 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 08:45:59 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 08:45:59 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 08:46:34 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 08:46:34 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 08:49:35 [INFO]: Request: PUT /customer-api/customer/67c5adb79b1b78bb0792cc20 - Body: {"customerName":"Arpan Halder","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-03-04 08:49:35 [INFO]: Response: PUT /customer-api/customer/67c5adb79b1b78bb0792cc20 - Status: 200 - Data: {"message":"Profile Updated Successfully"}
2025-03-04 08:49:39 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 08:49:39 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 08:49:41 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 08:49:41 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 08:49:42 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 08:49:42 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 09:03:59 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 09:03:59 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 09:04:05 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 09:04:05 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 09:04:09 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 09:04:09 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error"}
2025-03-04 09:04:37 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 09:04:37 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 500 - Data: {"message":"Server Error 3"}
2025-03-04 09:05:13 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 09:05:13 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 200 - Data: {"message":"Profile Updated Successfully","user":{"_id":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","password":"$2b$10$G3s6UTQ8k.2f2LX55BD4uuD1HjUdQUuDwrRnilZFmOV/uee2l4gz.","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z","address":{"city":"Los Angeles","state":"CA","pincode":"90001","_id":"67c6714793d611ec6330827f"},"__v":0}}
2025-03-04 09:05:39 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 09:05:39 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 404 - Data: {"message":"Password not matching"}
2025-03-04 09:05:44 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password124@","newPassword":"Password124@"}
2025-03-04 09:05:44 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 200 - Data: {"message":"Password Updated Successfully"}
2025-03-04 09:05:51 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password124@","newPassword":"Password124@"}
2025-03-04 09:05:51 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 200 - Data: {"message":"Password Updated Successfully"}
2025-03-04 09:05:53 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password124@","newPassword":"Password124@"}
2025-03-04 09:05:54 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 200 - Data: {"message":"Password Updated Successfully"}
2025-03-04 10:02:24 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@test.com","password":"Password123@"}
2025-03-04 10:02:25 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1ZGNjOGM0NWI4NGE3NTkxMmQxZjUiLCJpYXQiOjE3NDEwNjI3NDUsImV4cCI6MTc0MTA2OTk0NX0.Sn7iWf7gbyGjRZEleaQa-pXwJPhDFHIrCTbBUo6K7zk","customerdata":{"customerId":"67c5dcc8c45b84a75912d1f5","customerName":"Arpan Halder","customerEmailId":"arpanhalder@test.com","contactNumber":"7384190892","gender":"arpanhalder@test.com","dateOfBirth":"1999-01-01T00:00:00.000Z"}}
2025-03-04 14:13:38 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-04 14:13:39 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwNzc4MTksImV4cCI6MTc0MTA4NTAxOX0.IiYZiHorhYsGKihqwTlyHoqHwvngRQ7koceI8HEONrA","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-04 14:15:00 [INFO]: Request: GET /doc/ - Body: {}
2025-03-04 14:15:00 [INFO]: Response: GET /doc/ - Status: 200 - Data: 
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  
  <title>Swagger UI</title>
  <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
  <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" /><link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
  <style>
    html
    {
      box-sizing: border-box;
      overflow: -moz-scrollbars-vertical;
      overflow-y: scroll;
    }
    *,
    *:before,
    *:after
    {
      box-sizing: inherit;
    }

    body {
      margin:0;
      background: #fafafa;
    }
  </style>
</head>

<body>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
  <defs>
    <symbol viewBox="0 0 20 20" id="unlocked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
    </symbol>

    <symbol viewBox="0 0 20 20" id="locked">
      <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="close">
      <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow">
      <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
    </symbol>

    <symbol viewBox="0 0 20 20" id="large-arrow-down">
      <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
    </symbol>


    <symbol viewBox="0 0 24 24" id="jump-to">
      <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
    </symbol>

    <symbol viewBox="0 0 24 24" id="expand">
      <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
    </symbol>

  </defs>
</svg>

<div id="swagger-ui"></div>

<script src="./swagger-ui-bundle.js"> </script>
<script src="./swagger-ui-standalone-preset.js"> </script>
<script src="./swagger-ui-init.js"> </script>



<style>
  .swagger-ui .topbar .download-url-wrapper { display: none } undefined
</style>
</body>

</html>

2025-03-04 14:15:00 [INFO]: Request: GET /doc/swagger-ui.css - Body: {}
2025-03-04 14:15:00 [INFO]: Request: GET /doc/swagger-ui-bundle.js - Body: {}
2025-03-04 14:15:00 [INFO]: Request: GET /doc/swagger-ui-standalone-preset.js - Body: {}
2025-03-04 14:15:00 [INFO]: Request: GET /doc/swagger-ui-init.js - Body: {}
2025-03-04 14:15:00 [INFO]: Response: GET /doc/swagger-ui-init.js - Status: 200 - Data: 
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "REST API",
      "description": ""
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "paths": {
      "/customer/register": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "customerEmailId": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/customer/login": {
        "post": {
          "description": "",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerEmailId": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/customer/{customerId}": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "customerId",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "example": "any"
                  },
                  "contactNumber": {
                    "example": "any"
                  },
                  "gender": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/customer/updatePassword": {
        "put": {
          "description": "",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "example": "any"
                  },
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          }
        }
      }
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}

2025-03-04 14:15:01 [INFO]: Request: GET /doc/favicon-32x32.png - Body: {}
2025-03-04 14:16:12 [INFO]: Request: POST /payment-api/amount/502 - Body: {"cardId":"0123456789123456","nameOnCard":"John Doe","cardType":"DEBIT","cvv":"123","expiryDate":"2025-12-31","customerId":"12345"}
2025-03-04 14:22:43 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password123@"}
2025-03-04 14:22:43 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-04 14:22:47 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-04 14:22:47 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDEwNzgzNjcsImV4cCI6MTc0MTA4NTU2N30.58Wwl6IJuK0kmZx_ZgOJ9UcQwfDmPLwwg0--46Uf5z4","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-04 15:09:55 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-04 15:09:55 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwODExOTUsImV4cCI6MTc0MTA4ODM5NX0.NgSc6nLy5MGKTzxg1iEcLSuBFe9yzkGcsP1BAPRjguU","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-04 15:17:46 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c2ad2ff0b90c1e41d75c26","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 15:17:47 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 200 - Data: {"message":"Password Updated Successfully"}
2025-03-04 15:18:30 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password124@"}
2025-03-04 15:18:30 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwODE3MTAsImV4cCI6MTc0MTA4ODkxMH0.9vH36q8VvkD0vtj1wnCblJIH48mefsxKsU12g_TTwWo","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-04 15:18:53 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c2ad2ff0b90c1e41d75c26","oldPassword":"Password124@","newPassword":"Password123@"}
2025-03-04 15:18:53 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 200 - Data: {"message":"Password Updated Successfully"}
2025-03-04 15:19:27 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c2ad2ff0b90c1e41d75c26","oldPassword":"Password124@","newPassword":"Password123@"}
2025-03-04 15:19:27 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 404 - Data: {"message":"Password not matching"}
2025-03-04 15:19:28 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c2ad2ff0b90c1e41d75c26","oldPassword":"Password124@","newPassword":"Password123@"}
2025-03-04 15:19:28 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 404 - Data: {"message":"Password not matching"}
2025-03-04 15:19:33 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c2ad2ff0b90c1e41d75c26","oldPassword":"Password123@","newPassword":"Password123@"}
2025-03-04 15:19:33 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 200 - Data: {"message":"Password Updated Successfully"}
2025-03-04 18:41:25 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"address":"Home","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348","country":"India"}}
2025-03-04 18:41:25 [INFO]: Response: POST /customer-api/customer/register - Status: 400 - Data: {"message":"User already exists"}
2025-03-04 18:41:48 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-04 18:41:48 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDEwOTM5MDgsImV4cCI6MTc0MTEwMTEwOH0.ycXT-Kx1snBfLF5zkbHNfbUaw1tiDaJHKJF5jHQ7fxw","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-04 18:42:07 [INFO]: Request: PUT /customer-api/customer/67c5adb79b1b78bb0792cc20 - Body: {"customerName":"Arpan Halder","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15","address":{"addressName":"Home","addressLine1":"456 New Street","addressLine2":"Suite 10","area":"Uptown","city":"Los Angeles","state":"CA","pincode":"90001"}}
2025-03-04 18:42:07 [INFO]: Response: PUT /customer-api/customer/67c5adb79b1b78bb0792cc20 - Status: 200 - Data: {"message":"Profile Updated Successfully"}
2025-03-04 18:43:29 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password124@","newPassword":"Password124@"}
2025-03-04 18:43:29 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 403 - Data: {"message":"Invalid or Expired Token"}
2025-03-04 18:43:38 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password124@","newPassword":"Password124@"}
2025-03-04 18:43:38 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 200 - Data: {"message":"Password Updated Successfully"}
2025-03-04 18:43:50 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c5adb79b1b78bb0792cc20","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 18:43:50 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 404 - Data: {"message":"Password not matching"}
2025-03-04 18:46:37 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-04 18:46:37 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwOTQxOTcsImV4cCI6MTc0MTEwMTM5N30.msDojouItfuJNAVL6WSXylTiUS2UzXvFrljBCCstEv8","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-04 18:54:31 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-04 18:54:31 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwOTQ2NzEsImV4cCI6MTc0MTEwMTg3MX0.CUBVyRLj_LD0Xjen6kvaYjfLl7cEJhzPedIrXIoy7c4","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-04 18:55:25 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c2ad2ff0b90c1e41d75c26","oldPassword":"Password123@","newPassword":"Password123@"}
2025-03-04 18:55:25 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 200 - Data: {"message":"Password Updated Successfully"}
2025-03-04 18:58:10 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c2ad2ff0b90c1e41d75c26","oldPassword":"Password124@","newPassword":"Password124@"}
2025-03-04 18:58:10 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 404 - Data: {"message":"Password not matching"}
2025-03-04 18:58:16 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c2ad2ff0b90c1e41d75c26","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-04 18:58:16 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 200 - Data: {"message":"Password Updated Successfully"}
2025-03-04 18:59:21 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@gmail.com","password":"Password123@"}
2025-03-04 18:59:21 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M0NmNjZTExZjdjYTk0MzZiNTg1NDEiLCJpYXQiOjE3NDEwOTQ5NjEsImV4cCI6MTc0MTEwMjE2MX0.-mo7lXYO7W2a2u9usPN_DYZe3X5kH19pQTwgJM7RMWM","customerdata":{"customerId":"67c46cce11f7ca9436b58541","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@gmail.com","contactNumber":"7384190892","gender":"arpanhalder2@gmail.com","dateOfBirth":"2002-01-02T00:00:00.000Z"}}
2025-03-04 19:01:29 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@test.com","password":"Password123@"}
2025-03-04 19:01:29 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-04 19:01:39 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@test.com","password":"Password123@"}
2025-03-04 19:01:39 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-04 19:03:48 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@test.com","contactNumber":"7384190892","password":"Password123@","gender":"arpanhalder@test.com","dateOfBirth":"1999-01-01","address":{"address":"Karanjali, Kupli,  South 24 pgs,  743348","city":"Karanjali","state":"West Bengal","pincode":"743348","country":"India"}}
2025-03-04 19:03:48 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M3MDEzY2I4NzY4OWNlODI3NjdkZjIiLCJpYXQiOjE3NDEwOTUyMjgsImV4cCI6MTc0MTEwMjQyOH0.IZjDNud-75pyPcDtMqyo9be_QKqwyx_M9WXLRjhNadA","customerId":"67c7013cb87689ce82767df2"}
2025-03-04 19:09:57 [INFO]: Request: PUT /customer-api/customer/67c7013cb87689ce82767df2 - Body: {"customerName":"Arpan Halder","contactNumber":"7384190895","gender":"Male"}
2025-03-04 19:09:57 [INFO]: Response: PUT /customer-api/customer/67c7013cb87689ce82767df2 - Status: 200 - Data: {"message":"Profile Updated Successfully"}
2025-03-04 19:39:22 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-04 19:39:22 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-04 19:39:27 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password124@"}
2025-03-04 19:39:27 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwOTczNjcsImV4cCI6MTc0MTEwNDU2N30.Ob8adIyhkqIukuWOWoQgt7B3fltwrP9TVi_BkmW7KsI","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-04 19:41:18 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@example.com","password":"Password123@"}
2025-03-04 19:41:18 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MxNmNkODZmZTQ4NjYyYTk5ODAyYTIiLCJpYXQiOjE3NDEwOTc0NzgsImV4cCI6MTc0MTEwNDY3OH0.rQo2mtk3G7sejs59qkpOwmIo1SVI-VizGaQef4bgFvg","customerdata":{"customerId":"67c16cd86fe48662a99802a2","customerName":"Arpan Halder","customerEmailId":"arpanhalder@example.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-04 19:55:58 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Test Test","customerEmailId":"testasasasa@test.com","contactNumber":"7123456892","password":"Test@123","gender":"testasasasa@test.com","dateOfBirth":"2001-01-01","address":{"address":"Karanjali, Kupli,  South 24 pgs,  743348","city":"Karanjali","state":"West Bengal","pincode":"743348","country":"India"}}
2025-03-04 19:55:59 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M3MGQ3N2I4NzY4OWNlODI3NjdkZmMiLCJpYXQiOjE3NDEwOTgzNTksImV4cCI6MTc0MTEwNTU1OX0.mlzgK6Rf-gcDrfgQgI30CxFop4znqUL-AKO0sUlfWOE","customerId":"67c70d77b87689ce82767dfc"}
2025-03-04 20:02:28 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-04 20:02:28 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-04 20:02:31 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password124@"}
2025-03-04 20:02:31 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDEwOTg3NTEsImV4cCI6MTc0MTEwNTk1MX0.AA7xMviZQ8Wdsj1t8M9Fy4zwMPOLYK8_mtdxajWVGBE","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-04 20:04:56 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c2ad2ff0b90c1e41d75c26","oldPassword":"Password123@","newPassword":"Password123@"}
2025-03-04 20:04:56 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 404 - Data: {"message":"Password not matching"}
2025-03-04 20:05:01 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c2ad2ff0b90c1e41d75c26","oldPassword":"Password124@","newPassword":"Password123@"}
2025-03-04 20:05:02 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 200 - Data: {"message":"Password Updated Successfully"}
2025-03-04 22:22:56 [INFO]: Request: PUT /customer-api/customer/67c2ad2ff0b90c1e41d75c26 - Body: {"customerName":"Arpan Halder","contactNumber":"8918449078","gender":"Female"}
2025-03-04 22:22:56 [INFO]: Response: PUT /customer-api/customer/67c2ad2ff0b90c1e41d75c26 - Status: 403 - Data: {"message":"Invalid or Expired Token"}
2025-03-04 22:23:13 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-04 22:23:13 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDExMDcxOTMsImV4cCI6MTc0MTExNDM5M30.8vZCuejDgLbHCpfDqe_2tZerojmM1Q2bkn4klXGkxkE","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-04 22:23:22 [INFO]: Request: PUT /customer-api/customer/67c2ad2ff0b90c1e41d75c26 - Body: {"customerName":"Arpan Halder","contactNumber":"8918449078","gender":"Female"}
2025-03-04 22:23:22 [INFO]: Response: PUT /customer-api/customer/67c2ad2ff0b90c1e41d75c26 - Status: 200 - Data: {"message":"Profile Updated Successfully"}
2025-03-04 22:23:30 [INFO]: Request: PUT /customer-api/customer/67c2ad2ff0b90c1e41d75c26 - Body: {"customerName":"Arpan Halder","contactNumber":"8918449078","gender":"Male"}
2025-03-04 22:23:30 [INFO]: Response: PUT /customer-api/customer/67c2ad2ff0b90c1e41d75c26 - Status: 200 - Data: {"message":"Profile Updated Successfully"}
2025-03-04 22:23:35 [INFO]: Request: PUT /customer-api/customer/67c2ad2ff0b90c1e41d75c26 - Body: {"customerName":"Arpan Halder","contactNumber":"8918449077","gender":"Male"}
2025-03-04 22:23:35 [INFO]: Response: PUT /customer-api/customer/67c2ad2ff0b90c1e41d75c26 - Status: 200 - Data: {"message":"Profile Updated Successfully"}
2025-03-04 22:26:19 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"fesfsdfsfsfsf"}
2025-03-04 22:26:19 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-04 22:26:31 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"fesfsdfsfsfsf"}
2025-03-04 22:26:31 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-04 22:26:38 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"fesfsdfsfsfsf"}
2025-03-04 22:26:38 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-04 22:27:00 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-04 22:27:00 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExMDc0MjAsImV4cCI6MTc0MTExNDYyMH0.Tgq41N1nyhrDo6BOGFKCBEHPoUZMdJqFRxxK-4--nwU","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-04 22:27:29 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"fesfsdfsfsfsf"}
2025-03-04 22:27:29 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-04 22:27:37 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.com","password":"fesfsdfsfsfsf"}
2025-03-04 22:27:37 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-04 22:27:55 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-04 22:27:55 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDExMDc0NzUsImV4cCI6MTc0MTExNDY3NX0.k5fQhPSDVg02ANkwZFi6rLhQhBX0DiAF11SrxwkIXFU","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449077","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-04 22:28:03 [INFO]: Request: GET /customer-api/customer/login - Body: {}
2025-03-04 22:35:39 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-04 22:35:39 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDExMDc5MzksImV4cCI6MTc0MTExNTEzOX0.CEkE3VVmbh28HktRKO5GKKoxHnm5WxYyP_BKbeRtQHA","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449077","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-04 22:35:42 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-04 22:35:43 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2MyYWQyZmYwYjkwYzFlNDFkNzVjMjYiLCJpYXQiOjE3NDExMDc5NDMsImV4cCI6MTc0MTExNTE0M30.EIMiWIqxfgnOLl0GZr4cOP2ExyhQ9FtNNz4dWf6PC_0","customerdata":{"customerId":"67c2ad2ff0b90c1e41d75c26","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8918449077","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-04 22:37:26 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-04 22:37:27 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExMDgwNDcsImV4cCI6MTc0MTExNTI0N30.axZeFriWG5CFWHg9sYLYBQmHn5ZKw_MKe3wNvnCGHbM","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-04 22:37:28 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-04 22:37:28 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExMDgwNDgsImV4cCI6MTc0MTExNTI0OH0.003uRR8UwvWUpHXEjhE5Rykbnrg_qxA7lrk0idBLG9Q","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-04 22:39:33 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-04 22:39:33 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExMDgxNzMsImV4cCI6MTc0MTExNTM3M30.uEEaAFUVBCY5W4Ts4XwhQ9rsKE-sCDOWu39mkSFqmP0","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-04 22:39:41 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-04 22:39:41 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExMDgxODEsImV4cCI6MTc0MTExNTM4MX0.t2ePssK-xmQAmRApIGGrJbZ0RzkdW6fps7Jlwy3oqjc","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-04 22:39:50 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-04 22:39:50 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExMDgxOTAsImV4cCI6MTc0MTExNTM5MH0.sCXc9H40cDcZS6hhD0HbFBrKOXzTRj742HUnAEXdGyA","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-05 08:40:21 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-05 08:40:21 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExNDQyMjEsImV4cCI6MTc0MTE1MTQyMX0.6LrRwNkfta4uLiumBRMj3XCLF5upFdFebzooFRFFFak","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-05 08:51:17 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-05 08:51:18 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExNDQ4NzgsImV4cCI6MTc0MTE1MjA3OH0.gVk_JbeO9B3zN4gneorbJ1S5GZF7XkyXfO-Hk8yTmYw","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-05 08:51:18 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-05 08:51:18 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExNDQ4NzgsImV4cCI6MTc0MTE1MjA3OH0.gVk_JbeO9B3zN4gneorbJ1S5GZF7XkyXfO-Hk8yTmYw","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-05 09:50:17 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-05 09:50:18 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExNDg0MTgsImV4cCI6MTc0MTE1NTYxOH0.ROUkShTT5hPM5NrFWqZdZJCibWAOVRdLq_kN1jmB1w4","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-05 09:50:18 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-05 09:50:19 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExNDg0MTksImV4cCI6MTc0MTE1NTYxOX0.WxH43xSXmIVxtUDWepK5FsvBX2zw3LRKUGMZfjfXLCE","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-05 11:16:20 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.comd","password":"asdasdadasdas"}
2025-03-05 11:16:20 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-05 11:16:32 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.comd","password":"asdasdadasdas"}
2025-03-05 11:16:32 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-05 11:17:07 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder7384@gmail.comd","password":"asdasdadasdas"}
2025-03-05 11:17:07 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-05 11:17:33 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.comd","password":"Password123@"}
2025-03-05 11:17:33 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-05 11:17:50 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.comd","password":"Password124@"}
2025-03-05 11:17:50 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-05 11:18:17 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-05 11:18:18 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExNTM2OTgsImV4cCI6MTc0MTE2MDg5OH0.6jz9LA0yAUrYoTomLTDIJMGnJAXtG9tQYpqdBucx92w","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-05 11:18:35 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-05 11:18:35 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExNTM3MTUsImV4cCI6MTc0MTE2MDkxNX0.GDHQ37WOa9_LTg_kFW_rlyLWJA9qpZszzY6IN0LdxwU","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-05 11:21:11 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-05 11:21:11 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExNTM4NzEsImV4cCI6MTc0MTE2MTA3MX0.BJn20RJshpKbtXOZXj01p_bupk4FVLSlhscYelbPJw4","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-05 11:21:12 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-05 11:21:12 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExNTM4NzIsImV4cCI6MTc0MTE2MTA3Mn0.4O8Aul881SHa9BWL55bPTFAeer6TmtXvRWUBy2kl5cE","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-05 11:21:13 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-05 11:21:13 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExNTM4NzMsImV4cCI6MTc0MTE2MTA3M30.HqtS37uIt5bLs5lQyWnGQA3Z17smXBz-UX6bP4fcPL4","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-05 11:21:13 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-05 11:21:14 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExNTM4NzQsImV4cCI6MTc0MTE2MTA3NH0._KUB0iYESst7a0FMF9Z9FSF-s4Bgw6Xzc-QRdoFeP5A","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-05 11:21:14 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-05 11:21:14 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExNTM4NzQsImV4cCI6MTc0MTE2MTA3NH0._KUB0iYESst7a0FMF9Z9FSF-s4Bgw6Xzc-QRdoFeP5A","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-05 11:21:15 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-05 11:21:15 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M1YWRiNzliMWI3OGJiMDc5MmNjMjAiLCJpYXQiOjE3NDExNTM4NzUsImV4cCI6MTc0MTE2MTA3NX0.jwdeqRTiTzWxKtKwc4-04cfNeW3ZfJkRKi4VER395vE","customerdata":{"customerId":"67c5adb79b1b78bb0792cc20","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449079","gender":"Male","dateOfBirth":"1999-06-15T00:00:00.000Z"}}
2025-03-05 12:02:47 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@test.com","contactNumber":"7384190892","password":"Password123@","gender":"arpanhalder@test.com","dateOfBirth":"2001-01-01","address":{"address":"Karanjali, Kupli,  South 24 pgs,  743348","city":"Karanjali","state":"West Bengal","pincode":"743348","country":"India"}}
2025-03-05 12:02:47 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M3ZjAwZjk5ZmE4NTJkN2IxOGYwOWMiLCJpYXQiOjE3NDExNTYzNjcsImV4cCI6MTc0MTE2MzU2N30.BYvgn75Cx9FNPauf_j-KtcLbYkrMP3cRdHhf2AafdU8","customerId":"67c7f00f99fa852d7b18f09c"}
2025-03-05 12:03:45 [INFO]: Request: PUT /customer-api/customer/updatePassword - Body: {"customerId":"67c7f00f99fa852d7b18f09c","oldPassword":"Password123@","newPassword":"Password124@"}
2025-03-05 12:03:46 [INFO]: Response: PUT /customer-api/customer/updatePassword - Status: 200 - Data: {"message":"Password Updated Successfully"}
2025-03-05 12:03:53 [INFO]: Request: PUT /customer-api/customer/67c7f00f99fa852d7b18f09c - Body: {"customerName":"Arpan Halder","contactNumber":"7384190892","gender":"Female"}
2025-03-05 12:03:54 [INFO]: Response: PUT /customer-api/customer/67c7f00f99fa852d7b18f09c - Status: 200 - Data: {"message":"Profile Updated Successfully"}
2025-03-05 12:04:00 [INFO]: Request: PUT /customer-api/customer/67c7f00f99fa852d7b18f09c - Body: {"customerName":"Arpan Halder","contactNumber":"7384190892","gender":"Male"}
2025-03-05 12:04:00 [INFO]: Response: PUT /customer-api/customer/67c7f00f99fa852d7b18f09c - Status: 200 - Data: {"message":"Profile Updated Successfully"}
2025-03-05 12:41:52 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8384190892","password":"Password123@","gender":"arpanhalder@gmail.com","dateOfBirth":"2001-03-05","address":{"address":"Karanjali, Kupli,  South 24 pgs,  743348","city":"Karanjali","state":"West Bengal","pincode":"743348","country":"India"}}
2025-03-05 12:41:52 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M3ZjkzODk5ZmE4NTJkN2IxOGYwYTgiLCJpYXQiOjE3NDExNTg3MTIsImV4cCI6MTc0MTE2NTkxMn0.Ki0a6m5_otJr_7_nGVCZKZC4mIEz4uLo4JCaD5C-raQ","customerId":"67c7f93899fa852d7b18f0a8"}
2025-03-05 12:42:26 [INFO]: Request: PUT /customer-api/customer/67c7f93899fa852d7b18f0a8 - Body: {"customerName":"Arpan Halder","contactNumber":"8384190891","gender":"Male"}
2025-03-05 12:42:26 [INFO]: Response: PUT /customer-api/customer/67c7f93899fa852d7b18f0a8 - Status: 200 - Data: {"message":"Profile Updated Successfully"}
2025-03-05 12:56:42 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password124@"}
2025-03-05 12:56:42 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-05 12:56:48 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-05 12:56:48 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M3ZjkzODk5ZmE4NTJkN2IxOGYwYTgiLCJpYXQiOjE3NDExNTk2MDgsImV4cCI6MTc0MTE2NjgwOH0.2WDyXM7vrK2dqYm9FRyfnQmtB56LOG3rTOAs1nh5qz4","customerdata":{"customerId":"67c7f93899fa852d7b18f0a8","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8384190891","gender":"Male","dateOfBirth":"2001-03-05T00:00:00.000Z"}}
2025-03-27 21:22:40 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password124@"}
2025-03-27 21:22:40 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-27 21:22:45 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"address":"Home","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348","country":"India"}}
2025-03-27 21:22:46 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2U1NzQ0ZTc3NjMxNzI4MDdmMjc1ZjkiLCJpYXQiOjE3NDMwOTA3NjYsImV4cCI6MTc0MzA5Nzk2Nn0.ANbvJ5Sf_rnr7tXktUy8qH7VOyJ7n4bI6Niq5RBjiCY","customerId":"67e5744e7763172807f275f9"}
2025-03-27 21:22:58 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password123@"}
2025-03-27 21:22:58 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2U1NzQ0ZTc3NjMxNzI4MDdmMjc1ZjkiLCJpYXQiOjE3NDMwOTA3NzgsImV4cCI6MTc0MzA5Nzk3OH0.aEHx6jHa-YtloyOGf0fsMpRgvmVJLIWeG2B8CA1W5-I","customerdata":{"customerId":"67e5744e7763172807f275f9","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-27 21:32:19 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-27 21:32:19 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M3ZjkzODk5ZmE4NTJkN2IxOGYwYTgiLCJpYXQiOjE3NDMwOTEzMzksImV4cCI6MTc0MzA5ODUzOX0.-6Hqh5XTbc7u-1Z11cLY3N_b-2kQGCh_wEmWYRPZLuM","customerdata":{"customerId":"67c7f93899fa852d7b18f0a8","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8384190891","gender":"Male","dateOfBirth":"2001-03-05T00:00:00.000Z"}}
2025-03-28 12:16:54 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password123@"}
2025-03-28 12:16:54 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-28 12:17:16 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"address":"Home","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348","country":"India"}}
2025-03-28 12:17:16 [INFO]: Response: POST /customer-api/customer/register - Status: 201 - Data: {"message":"User Registered Successfully","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2U2NDVmNDA3NDRjYTk2Zjg3OTg2MGQiLCJpYXQiOjE3NDMxNDQ0MzYsImV4cCI6MTc0MzE1MTYzNn0.4ubRDwJVeH_seew9wQRf5MREFuDofYQaq2jMhs0MkG0","customerId":"67e645f40744ca96f879860d"}
2025-03-28 12:17:21 [INFO]: Request: POST /customer-api/customer/register - Body: {"customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449078","password":"Password123@","gender":"Male","dateOfBirth":"1999-09-21","address":{"address":"Home","area":"Karanjali Market","city":"Karanjali","state":"WB","pincode":"743348","country":"India"}}
2025-03-28 12:17:21 [INFO]: Response: POST /customer-api/customer/register - Status: 400 - Data: {"message":"User already exists"}
2025-03-28 12:17:28 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@example.com","password":"Password123@"}
2025-03-28 12:17:28 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2U2NDVmNDA3NDRjYTk2Zjg3OTg2MGQiLCJpYXQiOjE3NDMxNDQ0NDgsImV4cCI6MTc0MzE1MTY0OH0.0yA0bKw5vzdQJXtxZ133m-0QVKONPhSyeJUcHwuMoSI","customerdata":{"customerId":"67e645f40744ca96f879860d","customerName":"Arpan Halder","customerEmailId":"arpanhalder2@example.com","contactNumber":"8918449078","gender":"Male","dateOfBirth":"1999-09-21T00:00:00.000Z"}}
2025-03-28 12:18:02 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@test.com","password":"Password123@"}
2025-03-28 12:18:02 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-28 12:18:08 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@test.com","password":"Password124@"}
2025-03-28 12:18:08 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M3ZjAwZjk5ZmE4NTJkN2IxOGYwOWMiLCJpYXQiOjE3NDMxNDQ0ODgsImV4cCI6MTc0MzE1MTY4OH0.OyrkgeSutdLtGOLYjdAHEcOhK01zimC3jqxY6nsdWW4","customerdata":{"customerId":"67c7f00f99fa852d7b18f09c","customerName":"Arpan Halder","customerEmailId":"arpanhalder@test.com","contactNumber":"7384190892","gender":"Male","dateOfBirth":"2001-01-01T00:00:00.000Z"}}
2025-03-28 12:18:55 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@test.com","password":"Password124@"}
2025-03-28 12:18:55 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M3ZjAwZjk5ZmE4NTJkN2IxOGYwOWMiLCJpYXQiOjE3NDMxNDQ1MzUsImV4cCI6MTc0MzE1MTczNX0._Vxvkjuo13d_xe-TdFiSDn0m6CuuoAgpry8JQo-n76o","customerdata":{"customerId":"67c7f00f99fa852d7b18f09c","customerName":"Arpan Halder","customerEmailId":"arpanhalder@test.com","contactNumber":"7384190892","gender":"Male","dateOfBirth":"2001-01-01T00:00:00.000Z"}}
2025-03-28 12:22:03 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-28 12:22:03 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M3ZjkzODk5ZmE4NTJkN2IxOGYwYTgiLCJpYXQiOjE3NDMxNDQ3MjMsImV4cCI6MTc0MzE1MTkyM30.IV8I16B-xIAukatPlafNaN9uLhCO8GdMGVesrfUkzb4","customerdata":{"customerId":"67c7f93899fa852d7b18f0a8","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8384190891","gender":"Male","dateOfBirth":"2001-03-05T00:00:00.000Z"}}
2025-03-28 12:22:50 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password124@"}
2025-03-28 12:22:50 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-03-28 12:22:57 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-28 12:22:57 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M3ZjkzODk5ZmE4NTJkN2IxOGYwYTgiLCJpYXQiOjE3NDMxNDQ3NzcsImV4cCI6MTc0MzE1MTk3N30.vZjIqjUvHaMjbtsjqrL01RuxpuvWjU0NVMdYtFup5aA","customerdata":{"customerId":"67c7f93899fa852d7b18f0a8","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8384190891","gender":"Male","dateOfBirth":"2001-03-05T00:00:00.000Z"}}
2025-03-28 12:32:02 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-28 12:32:02 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M3ZjkzODk5ZmE4NTJkN2IxOGYwYTgiLCJpYXQiOjE3NDMxNDUzMjIsImV4cCI6MTc0MzE1MjUyMn0.96rYSQKmbIqcOTcmC22QuRJR1ONxE3e6alNv2QsgiyU","customerdata":{"customerId":"67c7f93899fa852d7b18f0a8","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8384190891","gender":"Male","dateOfBirth":"2001-03-05T00:00:00.000Z"}}
2025-03-28 12:32:25 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-28 12:32:25 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M3ZjkzODk5ZmE4NTJkN2IxOGYwYTgiLCJpYXQiOjE3NDMxNDUzNDUsImV4cCI6MTc0MzE1MjU0NX0.Gro3FC149YSTClR3wV9SO16uCaxrl_c7zKT4JRWURZM","customerdata":{"customerId":"67c7f93899fa852d7b18f0a8","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8384190891","gender":"Male","dateOfBirth":"2001-03-05T00:00:00.000Z"}}
2025-03-28 12:37:14 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-28 12:37:14 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M3ZjkzODk5ZmE4NTJkN2IxOGYwYTgiLCJpYXQiOjE3NDMxNDU2MzQsImV4cCI6MTc0MzE1MjgzNH0.nd0QcFy1gLH_sniZgHZTLidqvi5UoWVOpFzM-abYSwM","customerdata":{"customerId":"67c7f93899fa852d7b18f0a8","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8384190891","gender":"Male","dateOfBirth":"2001-03-05T00:00:00.000Z"}}
2025-03-28 12:39:04 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-28 12:39:04 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M3ZjkzODk5ZmE4NTJkN2IxOGYwYTgiLCJpYXQiOjE3NDMxNDU3NDQsImV4cCI6MTc0MzE1Mjk0NH0.aaK6pVXIQLd42Cs3wv6zUcvXaqh_vhduRFK2yIUE-04","customerdata":{"customerId":"67c7f93899fa852d7b18f0a8","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8384190891","gender":"Male","dateOfBirth":"2001-03-05T00:00:00.000Z"}}
2025-03-28 12:40:15 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-28 12:40:15 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M3ZjkzODk5ZmE4NTJkN2IxOGYwYTgiLCJpYXQiOjE3NDMxNDU4MTUsImV4cCI6MTc0MzE1MzAxNX0.iWOh30mJ5DYrasBrFvfqGs065k33_hL3S2Ln10DF8qM","customerdata":{"customerId":"67c7f93899fa852d7b18f0a8","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8384190891","gender":"Male","dateOfBirth":"2001-03-05T00:00:00.000Z"}}
2025-03-28 12:41:32 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-28 12:41:32 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M3ZjkzODk5ZmE4NTJkN2IxOGYwYTgiLCJpYXQiOjE3NDMxNDU4OTIsImV4cCI6MTc0MzE1MzA5Mn0.WwkbYbScondYWM5sTu7QXSyGMMILwS-dAEIn0EhVKGg","customerdata":{"customerId":"67c7f93899fa852d7b18f0a8","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8384190891","gender":"Male","dateOfBirth":"2001-03-05T00:00:00.000Z"}}
2025-03-28 12:42:46 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-28 12:42:46 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M3ZjkzODk5ZmE4NTJkN2IxOGYwYTgiLCJpYXQiOjE3NDMxNDU5NjYsImV4cCI6MTc0MzE1MzE2Nn0.ILevPT1HoHWCJPDXLtvlRRaAyHNTBa6ShN1qU7CYQ8M","customerdata":{"customerId":"67c7f93899fa852d7b18f0a8","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8384190891","gender":"Male","dateOfBirth":"2001-03-05T00:00:00.000Z"}}
2025-03-28 12:49:13 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Password123@"}
2025-03-28 12:49:13 [INFO]: Response: POST /customer-api/customer/login - Status: 200 - Data: {"message":"The customer authentication successful.","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2M3ZjkzODk5ZmE4NTJkN2IxOGYwYTgiLCJpYXQiOjE3NDMxNDYzNTMsImV4cCI6MTc0MzE1MzU1M30.kWDAB7Rv7Tv5hcOIIOkGwYGYw2wn1bCdxwxB_cVOsVg","customerdata":{"customerId":"67c7f93899fa852d7b18f0a8","customerName":"Arpan Halder","customerEmailId":"arpanhalder@gmail.com","contactNumber":"8384190891","gender":"Male","dateOfBirth":"2001-03-05T00:00:00.000Z"}}
2025-04-27 09:58:51 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalde@gmail.com","password":"Test123@"}
2025-04-27 09:58:51 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-04-27 09:59:04 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Test123@"}
2025-04-27 09:59:05 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-04-27 10:00:27 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Demo123@"}
2025-04-27 10:00:27 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-04-27 10:00:32 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Arpan123@"}
2025-04-27 10:00:32 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-04-27 10:13:37 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@gmail.com","password":"Arpan123@"}
2025-04-27 10:13:37 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-04-27 10:13:42 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder2@gmail.com","password":"Demo123@"}
2025-04-27 10:13:42 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-04-27 10:13:45 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@gmail.com","password":"Demo123@"}
2025-04-27 10:13:45 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-04-27 10:13:50 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@test.com","password":"Demo123@"}
2025-04-27 10:13:50 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-04-27 10:13:54 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@test.com","password":"Test123@"}
2025-04-27 10:13:55 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
2025-04-27 10:14:03 [INFO]: Request: POST /customer-api/customer/login - Body: {"customerEmailId":"arpanhalder@test.com","password":"Arpan7384@"}
2025-04-27 10:14:03 [INFO]: Response: POST /customer-api/customer/login - Status: 400 - Data: {"message":"Invalid Credentials"}
